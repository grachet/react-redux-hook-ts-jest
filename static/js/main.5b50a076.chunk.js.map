{"version":3,"sources":["app/hooks.ts","constantes/textConstantes.ts","constantes/config.ts","features/auth/authAPI.ts","features/auth/authSlice.ts","features/auth/LogoutUserAvatar.tsx","functions/helperFunctions.ts","features/movie/movieAPI.ts","features/movie/movieSlice.ts","features/movie/MovieList.tsx","app/pages/home/Home.tsx","features/auth/LoginButton.tsx","app/pages/login/Login.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","APP_TITLE","PAGE_TITLES","CLIENT_ID_GOOGLE","TMDB_API_KEY","gapi","window","gapiLogin","a","onlyAlreadySigned","Promise","resolve","reject","load","auth2","init","client_id","scope","authInstance","getAuthInstance","isSignedIn","get","currentUser","Xd","signIn","console","error","gapiLogout","signOut","ANONYMOUS_ACCOUNT","email","profilePictureURL","fullName","isAnonymous","login","createAsyncThunk","response","it","Tt","kK","Se","logout","_","getState","auth","account","authSlice","createSlice","name","initialState","status","reducers","loginAnonymous","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectAuth","LogoutUserAvatar","dispatch","Tooltip","title","IconButton","size","color","onClick","Avatar","alt","src","locationToMovieType","location","pathname","substring","API_URL_TMDB","getApiUrlTMDB","endpoint","page","getSearchApiUrlTMDB","query","getGenreIdMovies","fetch","rep","json","genres","getSearchMovies","movies","getNowPlayingMovies","getUpcomingMovies","getTopRatedMovies","getGenre","reduce","obj","item","id","search","log","results","toprated","movie","topratedPage","nowplaying","nowplayingPage","upcoming","upcomingPage","movieSlice","genre","selectMovie","dispatchGetMovie","movieType","MovieList","searchText","useParams","useLocation","useEffect","length","Object","keys","Container","sx","mt","py","maxWidth","Grid","container","spacing","xs","Typography","component","variant","textAlign","verticalAlign","map","overview","backdrop_path","vote_average","release_date","genre_ids","sm","md","lg","Card","height","display","flexDirection","CardHeader","titleTypographyProps","subheaderTypographyProps","subheader","Rating","float","value","readOnly","CardMedia","backgroundColor","theme","palette","common","black","image","process","Box","flexGrow","px","pt","fontSize","text","secondary","line","element","truncateText","pb","slice","join","Button","mr","Search","styled","position","borderRadius","shape","alpha","white","marginLeft","marginRight","width","breakpoints","up","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","StyledDrawer","Drawer","flexShrink","boxSizing","Home","useState","openDrawer","setOpenDrawer","history","useHistory","PageType","changeMovieType","MovieType","push","AppBar","Toolbar","noWrap","ml","onKeyPress","e","key","target","placeholder","inputProps","LinearProgress","anchor","open","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","GoogleButton","textTransform","grey","LoginButton","style","Copyright","align","Link","href","Date","getFullYear","minHeight","gutterBottom","paragraph","Stack","direction","p","createTheme","mode","main","App","ThemeProvider","CssBaseline","path","to","store","configureStore","reducer","authReducer","movieReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"0SAIaA,EAAiB,kBAAMC,eACvBC,EAAkDC,I,kPCLlDC,EAAY,SASZC,EAAyC,CAClD,OAAU,SACV,SAAY,YACZ,WAAc,cACd,SAAY,c,mDCbHC,EAAmB,2EACnBC,EAAe,mCCGpBC,EAASC,OAATD,KAEKE,GAAS,uCAAG,0CAAAC,EAAA,6DAAOC,EAAP,kDAEX,IAAIC,SAAQ,SAACC,EAASC,GACxBP,EAAKQ,KAAK,eAAgBF,MAHb,uBAKXL,OAAOD,KAAKS,MAAMC,KAAK,CACzBC,UAAWb,EACXc,MAAO,qDAPM,UASXC,EAAeb,EAAKS,MAAMK,mBACbD,EAAaE,WAAWC,MAV1B,0CAYNH,EAAaI,YAAYC,IAZnB,WAaLd,EAbK,kCAcAS,EAAaM,SAdb,mGAiBjBC,QAAQC,MAAR,MAjBiB,iCAmBd,MAnBc,0DAAH,qDAsBTC,GAAU,uCAAG,4BAAAnB,EAAA,sEAEZU,EAAeb,EAAKS,MAAMK,kBAFd,SAGZD,EAAaU,UAHD,iCAIX,GAJW,uCAMlBH,QAAQC,MAAR,MANkB,mBAOX,GAPW,yDAAH,qDCxBjBG,GAAiC,CACnCC,MAAO,YACPC,kBAAmB,wFACnBC,SAAU,YACVC,aAAa,GAoBJC,GAAQC,YACjB,aADiC,sBAEjC,0CAAA3B,EAAA,6DAAOC,EAAP,yCAC2BF,GAAUE,GADrC,cACU2B,EADV,yBAEW,CACHN,MAAOM,EAASC,GAAGC,GACnBP,kBAAmBK,EAASC,GAAGE,GAC/BP,SAAUI,EAASC,GAAGG,GACtBP,aAAa,IANrB,4CAWSQ,GAASN,YAClB,cADkC,uCAElC,WAAOO,EAAP,wBAAAlC,EAAA,yDAAYmC,EAAZ,EAAYA,SAAZ,EACqBA,IADrB,QACYC,EADZ,EACYA,YADZ,IAESA,GAFT,UAESA,EAAMC,eAFf,aAES,EAAeZ,YAFxB,gCAGcN,KAHd,gCAKW,MALX,2CAFkC,yDAWzBmB,GAAYC,YAAY,CACjCC,KAAM,OACNC,aA/B4B,CAC5BJ,QAAS,KACTK,OAAQ,QA8BRC,SAAU,CACNC,eAAgB,SAACC,GAAYA,EAAMR,QAAUhB,KAEjDyB,cAAe,SAACC,GACZA,EACKC,QAAQtB,GAAMuB,SAAS,SAACJ,GACrBA,EAAMH,OAAS,aAElBM,QAAQtB,GAAMwB,WAAW,SAACL,EAAOM,GAC9BN,EAAMH,OAAS,OACfG,EAAMR,QAAUc,EAAOC,WAE1BJ,QAAQf,GAAOgB,SAAS,SAACJ,GACtBA,EAAMH,OAAS,aAElBM,QAAQf,GAAOiB,WAAW,SAACL,GACxBA,EAAMH,OAAS,OACfG,EAAMR,QAAU,WAKjBO,GAAmBN,GAAUe,QAA7BT,eAEFU,GAAa,SAACT,GAAD,OAAsBA,EAAMT,KAAKC,SAE5CC,MAAf,Q,QCzDeiB,OAdf,WAEI,IAAMlB,EAAU9C,EAAe+D,IACzBE,EAAWnE,IAEjB,OACI,eAACoE,EAAA,EAAD,CAASC,MAAO,uBAAiBrB,QAAjB,IAAiBA,OAAjB,EAAiBA,EAASf,OAA1C,SACI,eAACqC,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUC,QAAS,kBAAMN,EAASvB,OAAjE,SACI,eAAC8B,EAAA,EAAD,CAAQC,IAAG,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAASb,SAAUyC,IAAG,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAASd,yB,4ICfjD2C,GAAsB,SAACC,GAChC,IAAM3B,EAAO2B,EAASC,SAASC,UAAU,GACzC,MAAa,aAAT7B,GAAgC,eAATA,GAAkC,aAATA,EACzCA,EAEA,UCLT8B,GAAe,gCAIRC,GAAgB,SAACC,GAAD,IAAmBC,EAAnB,uDAA2C,EAA3C,OAAyDH,GAAeE,EAAW,YAAc5E,EAAe,SAAW6E,GAE3IC,GAAsB,eAACD,EAAD,uDAAyB,EAAGE,EAA5B,uDAA4C,GAA5C,OAA2DL,GAAe,wBAA0B1E,EAAe,UAAY+E,EAAQ,SAAWF,GAExKG,GAAgB,uCAAG,8BAAA5E,EAAA,+EAEN6E,MAAMP,GAAe,4BAA8B1E,GAF7C,cAElBkF,EAFkB,gBAGLA,EAAIC,OAHC,cAGlBA,EAHkB,yBAIjBA,EAAKC,QAJY,yCAMxB/D,QAAQC,MAAR,MANwB,kBAOjB,IAPiB,0DAAH,qDAWhB+D,GAAe,uCAAG,WAAON,GAAP,+BAAA3E,EAAA,6DAAsByE,EAAtB,+BAAqC,EAArC,kBAELI,MAAMH,GAAoBD,EAAME,IAF3B,cAEjBG,EAFiB,gBAGFA,EAAIC,OAHF,cAGjBG,EAHiB,yBAIhBA,GAJgB,yCAMvBjE,QAAQC,MAAR,MANuB,kBAOhB,MAPgB,0DAAH,sDAWfiE,GAAmB,uCAAG,4CAAAnF,EAAA,6DAAOyE,EAAP,+BAAsB,EAAtB,kBAETI,MAAMN,GAAc,oBAAqBE,IAFhC,cAErBK,EAFqB,gBAGNA,EAAIC,OAHE,cAGrBG,EAHqB,yBAIpBA,GAJoB,yCAM3BjE,QAAQC,MAAR,MAN2B,kBAOpB,MAPoB,0DAAH,qDAWnBkE,GAAiB,uCAAG,4CAAApF,EAAA,6DAAOyE,EAAP,+BAAsB,EAAtB,kBAEPI,MAAMN,GAAc,iBAAkBE,IAF/B,cAEnBK,EAFmB,gBAGJA,EAAIC,OAHA,cAGnBG,EAHmB,yBAIlBA,GAJkB,yCAMzBjE,QAAQC,MAAR,MANyB,kBAOlB,MAPkB,0DAAH,qDAWjBmE,GAAiB,uCAAG,4CAAArF,EAAA,6DAAOyE,EAAP,+BAAsB,EAAtB,kBAEPI,MAAMN,GAAc,kBAAmBE,IAFhC,cAEnBK,EAFmB,gBAGJA,EAAIC,OAHA,cAGnBG,EAHmB,yBAIlBA,GAJkB,yCAMzBjE,QAAQC,MAAR,MANyB,kBAOlB,MAPkB,0DAAH,qD,kBCPjBoE,GAAW3D,YACpB,cADoC,sBAEpC,4BAAA3B,EAAA,sEAC2B4E,KAD3B,cACUhD,EADV,0BAEmB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAU2D,QAAO,SAACC,EAAgCC,GAAjC,oBAAC,gBAA6DD,GAA9D,kBAAoEC,EAAKC,GAAKD,EAAKjD,SAAS,MAAO,IAF/H,4CAOSmD,GAAShE,YAClB,eADkC,sBAElC,0CAAA3B,EAAA,6DAAO2E,EAAP,+BAAuB,GAAvB,SAC2BM,GAAgBN,EAAO,GADlD,cACU/C,EADV,OAEIX,QAAQ2E,IAAIhE,GAFhB,mBAGmB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,UAAW,IAHhC,4CAQSC,GAAWnE,YACpB,iBADoC,uCAEpC,WAAOO,EAAP,wBAAAlC,EAAA,6DAAYmC,EAAZ,EAAYA,SAAZ,EACsBA,IAAV4D,EADZ,EACYA,MADZ,SAE2BV,GAAkBU,EAAMC,cAFnD,cAEUpE,EAFV,0BAGmB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,UAAW,IAHhC,2CAFoC,yDAS3BI,GAAatE,YACtB,mBADsC,uCAEtC,WAAOO,EAAP,wBAAAlC,EAAA,6DAAYmC,EAAZ,EAAYA,SAAZ,EACsBA,IAAV4D,EADZ,EACYA,MADZ,SAE2BZ,GAAoBY,EAAMG,gBAFrD,cAEUtE,EAFV,0BAGmB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,UAAW,IAHhC,2CAFsC,yDAS7BM,GAAWxE,YACpB,iBADoC,uCAEpC,WAAOO,EAAP,wBAAAlC,EAAA,6DAAYmC,EAAZ,EAAYA,SAAZ,EACsBA,IAAV4D,EADZ,EACYA,MADZ,SAE2BX,GAAkBW,EAAMK,cAFnD,cAEUxE,EAFV,0BAGmB,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUiE,UAAW,IAHhC,2CAFoC,yDAU3BQ,GAAa9D,YAAY,CAClCC,KAAM,QACNC,aA7D6B,CAC7B6D,MAAO,GACPX,OAAQ,GACRM,WAAY,GACZE,SAAU,GACVL,SAAU,GACVI,eAAgB,EAChBE,aAAc,EACdJ,aAAc,EACdtD,OAAQ,QAqDRC,SAAU,GACVG,cAAe,SAACC,GACZA,EACKC,QAAQsC,GAASrC,SAAS,SAACJ,GACxBA,EAAMH,OAAS,aAElBM,QAAQsC,GAASpC,WAAW,SAACL,EAAOM,GACjCN,EAAMH,OAAS,OACfG,EAAMyD,MAAQnD,EAAOC,WAExBJ,QAAQ2C,GAAO1C,SAAS,SAACJ,GACtBA,EAAMH,OAAS,aAElBM,QAAQ2C,GAAOzC,WAAW,SAACL,EAAOM,GAC/BN,EAAMH,OAAS,OACfG,EAAM8C,OAASxC,EAAOC,WAEzBJ,QAAQiD,GAAWhD,SAAS,SAACJ,GAC1BA,EAAMH,OAAS,aAElBM,QAAQiD,GAAW/C,WAAW,SAACL,EAAOM,GACnCN,EAAMH,OAAS,OACfG,EAAMoD,WAAN,uBAAuBpD,EAAMoD,YAA7B,aAA4C9C,EAAOC,UACnDP,EAAMqD,oBAETlD,QAAQmD,GAASlD,SAAS,SAACJ,GACxBA,EAAMH,OAAS,aAElBM,QAAQmD,GAASjD,WAAW,SAACL,EAAOM,GACjCN,EAAMH,OAAS,OACfG,EAAMsD,SAAN,uBAAqBtD,EAAMsD,UAA3B,aAAwChD,EAAOC,UAC/CP,EAAMuD,kBAETpD,QAAQ8C,GAAS7C,SAAS,SAACJ,GACxBA,EAAMH,OAAS,aAElBM,QAAQ8C,GAAS5C,WAAW,SAACL,EAAOM,GACjCN,EAAMH,OAAS,OACfG,EAAMiD,SAAN,uBAAqBjD,EAAMiD,UAA3B,aAAwC3C,EAAOC,UAC/CP,EAAMmD,qBAKTO,GAAc,SAAC1D,GAAD,OAAsBA,EAAMkD,OAExCM,MAAf,QC9HMG,GAAmB,SAAChD,EAAyBiD,GAC7B,aAAdA,EACAjD,EAASsC,MACY,eAAdW,EACPjD,EAASyC,MACY,aAAdQ,GACPjD,EAAS2C,OA8FFO,OA1Ff,WAAsB,IAEVC,EAAwCC,cAAxCD,WACFxC,EAAW0C,cACXJ,EAA0BvC,GAAoBC,GAJnC,EAK8B5E,EAAegH,IAAzCrB,EALJ,EAKRuB,GAAoB/D,EALZ,EAKYA,OAAQ4D,EALpB,EAKoBA,MAE/B9C,EAAWnE,IAoBjB,OAlBAyH,qBAAU,WACD5B,EAAO6B,QACRP,GAAiBhD,EAAUiD,KAEhC,CAACjD,EAAU0B,EAAQuB,IAEtBK,qBAAU,WACAH,GACFnD,EAASmC,GAAOgB,MAErB,CAACnD,EAAUmD,IAEdG,qBAAU,WACDE,OAAOC,KAAKX,GAAOS,QACpBvD,EAAS8B,QAEd,CAAC9B,EAAU8C,IAGV,eAACY,GAAA,EAAD,CAAWC,GAAI,CAAEC,GAAI,EAAGC,GAAI,GAAKC,SAAS,KAA1C,SACI,gBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,YACOd,GAAyB,YAAXjE,IAAyBwC,EAAO6B,QAAU,eAACQ,GAAA,EAAD,CAAM9B,MAAI,EAACiC,GAAI,GAAf,SACvD,gBAACC,EAAA,EAAD,CAAYC,UAAU,MAAMC,QAAQ,SAAShE,MAAM,UAAUsD,GAAI,CAAEW,UAAW,UAA9E,2BACkB,eAAC,KAAD,CAA+BX,GAAI,CAAEY,cAAe,iBAGzE7C,EAAO8C,KAAI,gBAAGtC,EAAH,EAAGA,GAAIhC,EAAP,EAAOA,MAAOuE,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,cAAeC,EAAvC,EAAuCA,aAAcC,EAArD,EAAqDA,aAAcC,EAAnE,EAAmEA,UAAnE,OACR,eAACd,GAAA,EAAD,CAAM9B,MAAI,EAAUiC,GAAI,GAAIY,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA9C,SACI,gBAACC,GAAA,EAAD,CACItB,GAAI,CAAEuB,OAAQ,OAAQC,QAAS,OAAQC,cAAe,UAD1D,UAGI,eAACC,GAAA,EAAD,CACIC,qBAAsB,CAAEjB,QAAS,aACjCkB,yBAA0B,CAAElB,QAAS,UACrCnE,MAAOA,EACPsF,UAAW,uCACNZ,EACD,eAACa,GAAA,EAAD,CAAQ9B,GAAI,CAAE+B,MAAO,SAAWtF,KAAK,QAAQpB,KAAK,YAAY2G,MAAOhB,EAAe,EAAGiB,UAAQ,SAIvG,eAACC,GAAA,EAAD,CACIzB,UAAU,MACVT,GAAI,CAAEmC,gBAAiB,SAACC,GAAD,OAAkBA,EAAMC,QAAQC,OAAOC,QAC9DC,MAAOzB,EF5ED,kCE4EkCA,ER1EzC0B,8DQ2EC5F,IAAI,WAER,eAAC6F,GAAA,EAAD,CAAK1C,GAAI,CAAE2C,SAAU,EAAGC,GAAI,IAAKC,GAAI,KAArC,SACI,eAACrC,EAAA,EAAD,CACIR,GAAI,CAAE8C,SAAU,GAAIpG,MAAO,SAAC0F,GAAD,OAAkBA,EAAMC,QAAQU,KAAKC,YADpE,SAGI,eAAC,KAAD,CACIC,KAAM,EACNC,QAAQ,OACRC,aAAa,SACbJ,KAAMjC,QAIlB,eAAC4B,GAAA,EAAD,CAAK1C,GAAI,CAAE4C,GAAI,IAAKQ,GAAI,IAAxB,SACI,eAAC5C,EAAA,EAAD,CAAqBE,QAAQ,SAAShE,MAAM,UAAUsD,GAAI,CAAE8C,SAAU,IAAtE,SACK5B,EAAUmC,MAAM,EAAG,GAAGxC,KAAI,SAACtC,GAAD,OAAgBY,EAAMZ,MAAK+E,KAAK,QAD9C/E,SAjCbA,OAwClBiB,GAAyB,YAAXjE,GAAwB,eAAC6E,GAAA,EAAD,CAAM9B,MAAI,EAACiC,GAAI,GAAf,SAEpC,gBAACgD,GAAA,EAAD,CAAQ7C,QAAQ,WACZ/D,QAAS,kBAAM0C,GAAiBhD,EAAUiD,IAD9C,UAGI,eAAC,KAAD,CAAaU,GAAI,CAAEwD,GAAI,KAH3B,kBC/EdC,GAASC,YAAO,MAAPA,EAAc,gBAAGtB,EAAH,EAAGA,MAAH,oBACzBuB,SAAU,WACVC,aAAcxB,EAAMyB,MAAMD,aAC1BzB,gBAAiB2B,YAAM1B,EAAMC,QAAQC,OAAOyB,MAAO,KACnD,UAAW,CACP5B,gBAAiB2B,YAAM1B,EAAMC,QAAQC,OAAOyB,MAAO,MAEvDC,WAAY,EACZC,YAAa7B,EAAM9B,QAAQ,GAC3B4D,MAAO,QACN9B,EAAM+B,YAAYC,GAAG,MAAQ,CAC1BJ,WAAY5B,EAAM9B,QAAQ,GAC1B4D,MAAO,YAITG,GAAoBX,YAAO,MAAPA,EAAc,kBAAgB,CACpDY,QADoC,EAAGlC,MACxB9B,QAAQ,EAAG,GAC1BiB,OAAQ,OACRoC,SAAU,WACVY,cAAe,OACf/C,QAAS,OACTgD,WAAY,SACZC,eAAgB,aAGdC,GAAkBhB,YAAOiB,IAAPjB,EAAkB,gBAAGtB,EAAH,EAAGA,MAAH,MAAgB,CACtD1F,MAAO,UACP,wBAAwB,aACpB4H,QAASlC,EAAM9B,QAAQ,EAAG,EAAG,EAAG,GAChCsE,YAAY,cAAD,OAAgBxC,EAAM9B,QAAQ,GAA9B,KACXuE,WAAYzC,EAAM0C,YAAYC,OAAO,SACrCb,MAAO,QACN9B,EAAM+B,YAAYC,GAAG,MAAQ,CAC1BF,MAAO,OACP,UAAW,CACPA,MAAO,cAMjBc,GAAetB,YAAOuB,IAAPvB,EAAe,cAAGtB,MAAH,MAAgB,CAChD8B,MAAO,IACPgB,WAAY,EACZ,qBAAsB,CAClBhB,MAAO,IACPiB,UAAW,kBAIJ,SAASC,KAAQ,IAAD,EAESC,oBAAkB,GAF3B,mBAEpBC,EAFoB,KAERC,EAFQ,KAGrBvI,EAAW0C,cACX8F,EAAUC,cACRlK,EAAWnD,EAAegH,IAA1B7D,OACFmK,EAAyB3I,GAAoBC,GAE7C2I,EAAkB,SAACC,GACrBL,GAAc,GACdC,EAAQK,KAAKD,IASjB,OACI,uCACI,gBAACE,EAAA,EAAD,CAAQnC,SAAS,QAAjB,UACI,gBAACoC,EAAA,EAAD,WACI,eAACvJ,EAAA,EAAD,CAAYC,KAAK,QAAQC,MAAM,UAAUsD,GAAI,CAAEwD,GAAI,GAAK7G,QAAS,kBAAM4I,GAAc,IAArF,SACI,eAAC,IAAD,MAEJ,eAAC,IAAD,CAAqB7I,MAAM,UAAUsD,GAAI,CAAEwD,GAAI,KAC/C,gBAAChD,EAAA,EAAD,CAAYE,QAAQ,KAAKhE,MAAM,UAAUsJ,QAAM,EAAChG,GAAI,CAAE2C,SAAU,EAAGnB,QAAS,CAAEjB,GAAI,OAAQY,GAAI,UAA9F,UACK7I,EACD,eAACkI,EAAA,EAAD,CAAYE,QAAQ,SAAShE,MAAM,gBAAgB+D,UAAU,OAAOT,GAAI,CAAEiG,GAAI,GAA9E,SACK1N,EAAYmN,QAGrB,gBAAC,GAAD,WACI,eAACrB,GAAD,UACI,eAAC,IAAD,MAEJ,eAACK,GAAD,CACIwB,WAzBgD,SAACC,GACvD,UAAVA,EAAEC,KACFZ,EAAQK,KAAK,WAAcM,EAAEE,OAA4BrE,QAwBzCsE,YAAY,gBACZC,WAAY,CAAE,aAAc,eAGpC,eAAC,GAAD,OAEQ,YAAXhL,GAAwB,eAACiL,EAAA,EAAD,OAE7B,gCACI,eAAC,GAAD,MAEJ,eAACxB,GAAD,CACIyB,OAAO,OACPC,KAAMpB,EACNqB,QAAS,kBAAMpB,GAAc,IAHjC,SAKI,gBAACqB,EAAA,EAAD,WACI,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnK,QAAS,kBAAMgJ,EAAgB,cAAhD,UACI,eAACoB,EAAA,EAAD,UACI,eAAC,IAAD,MAEJ,eAACC,EAAA,EAAD,CAAcC,QAAS,iBAE3B,eAACC,EAAA,EAAD,IACA,gBAACL,EAAA,EAAD,CAAUC,QAAM,EAACnK,QAAS,kBAAMgJ,EAAgB,gBAAhD,UACI,eAACoB,EAAA,EAAD,UACI,eAAC,IAAD,MAEJ,eAACC,EAAA,EAAD,CAAcC,QAAS,mBAE3B,gBAACJ,EAAA,EAAD,CAAUC,QAAM,EAACnK,QAAS,kBAAMgJ,EAAgB,cAAhD,UACI,eAACoB,EAAA,EAAD,UACI,eAAE,IAAF,MAEJ,eAACC,EAAA,EAAD,CAAcC,QAAS,0B,6CC7IzCE,GAAezD,YAAOH,KAAPG,EAAe,gBAAGtB,EAAH,EAAGA,MAAH,MAAgB,CAChDgF,cAAe,OACfjF,gBAAiBC,EAAMC,QAAQC,OAAOyB,MACtCrH,MAAO0F,EAAMC,QAAQgF,KAAK,KAC1B,UAAW,CACPlF,gBAAiBC,EAAMC,QAAQgF,KAAK,UA8B7BC,OA1Bf,WAEI,IAAMjL,EAAWnE,IAMjB,OAJAyH,qBAAU,WACNtD,EAAS9B,IAAM,MAChB,CAAC8B,IAGA,uCACI,gBAAC8K,GAAD,CAEIzG,QAAQ,YACR/D,QAAS,kBAAMN,EAAS9B,OAH5B,UAKI,sBAAKsC,IAAI,cAAcC,IAAK2F,mDAAoD8E,MAAO,CAAEtD,YAAa,MAL1G,yBAQA,gBAACV,GAAA,EAAD,CAAQ7C,QAAQ,WACZ/D,QAAS,kBAAMN,EAASZ,OAD5B,UAEI,eAAC,KAAD,CAAauE,GAAI,CAAEwD,GAAI,KAF3B,oBCzBZ,SAASgE,KACL,OACI,gBAAChH,EAAA,EAAD,CAAYE,QAAQ,QAAQhE,MAAM,iBAAiB+K,MAAM,SAAzD,UACK,kBACD,eAACC,GAAA,EAAD,CAAMhL,MAAM,UAAUiL,KXXL,6BWWjB,SXfW,qBWiBH,KACP,IAAIC,MAAOC,cACX,OAKE,SAASzC,KAEpB,OACI,gBAAC1C,GAAA,EAAD,CAAK1C,GAAI,CACLwB,QAAS,OACTC,cAAe,SACf+C,WAAY,SACZsD,UAAW,SAJf,UAMI,eAAChC,EAAA,EAAD,CAAQnC,SAAS,WAAjB,SACI,gBAACoC,EAAA,EAAD,WACI,eAAC,IAAD,CAAqBrJ,MAAM,UAAUsD,GAAI,CAAEwD,GAAI,KAC/C,eAAChD,EAAA,EAAD,CAAYE,QAAQ,KAAKhE,MAAM,UAAUsJ,QAAM,EAA/C,SACK1N,SAIb,eAACyH,GAAA,EAAD,CAAWU,UAAU,OAAON,SAAS,KAAKH,GAAI,CAAE2C,SAAU,GAA1D,SACI,gBAAC5C,GAAA,EAAD,CAAWI,SAAS,KAAKH,GAAI,CAAEC,GAAI,GAAnC,UACI,eAACO,EAAA,EAAD,CACIC,UAAU,KACVC,QAAQ,KACR+G,MAAM,SACN/K,MAAM,eACNqL,cAAY,EALhB,SAOKzP,IAEL,eAACkI,EAAA,EAAD,CAAYE,QAAQ,KAAK+G,MAAM,SAAS/K,MAAM,iBAAiBsL,WAAS,EAAxE,SXnDO,wDWsDP,eAACC,GAAA,EAAD,CACIjI,GAAI,CAAE6C,GAAI,GACVqF,UAAU,MACV5H,QAAS,EACTmE,eAAe,SAJnB,SAMI,eAAC,GAAD,WAIZ,eAAC/B,GAAA,EAAD,CAAK1C,GAAI,CAAEmI,EAAG,GAAK1H,UAAU,SAA7B,SACI,eAAC+G,GAAD,SCvDhB,IAAMpF,GAAQgG,YAAY,CACxB/F,QAAS,CACPgG,KAAM,OACNpB,QAAS,CACPqB,KAAM,WAERtF,UAAW,CACTsF,KAAM,WA2CGC,OAtCf,WAEE,IAAMrN,EAAU9C,EAAe+D,IAE/B,OACE,gBAACqM,EAAA,EAAD,CAAepG,MAAOA,GAAtB,UACE,eAACqG,EAAA,EAAD,IACA,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,gBAAC,IAAD,CAAOC,KAAK,SAAZ,YACKxN,GAAW,eAAC,IAAD,CAAUyN,GAAG,cAC3B,eAAC,GAAD,OAEF,gBAAC,IAAD,CAAOD,KAAK,sBAAZ,WACIxN,GAAW,eAAC,IAAD,CAAUyN,GAAG,WAC1B,eAACvD,GAAD,OAEF,gBAAC,IAAD,CAAOsD,KAAK,YAAZ,WACIxN,GAAW,eAAC,IAAD,CAAUyN,GAAG,WAC1B,eAACvD,GAAD,OAEF,gBAAC,IAAD,CAAOsD,KAAK,cAAZ,WACIxN,GAAW,eAAC,IAAD,CAAUyN,GAAG,WAC1B,eAACvD,GAAD,OAEF,gBAAC,IAAD,CAAOsD,KAAK,YAAZ,WACIxN,GAAW,eAAC,IAAD,CAAUyN,GAAG,WAC1B,eAACvD,GAAD,OAEF,eAAC,IAAD,CAAOsD,KAAK,IAAZ,SACE,eAAC,IAAD,CAAUC,GAAG,yBClDZC,GAAQC,YAAe,CAClCC,QAAS,CACP7N,KAAM8N,GACNnK,MAAOoK,MCKSC,QACW,cAA7BtQ,OAAOqE,SAASkM,UAEe,UAA7BvQ,OAAOqE,SAASkM,UAEhBvQ,OAAOqE,SAASkM,SAASC,MACvB,2DCVNC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,IAAD,CAAUV,MAAOA,GAAjB,SACE,eAAC,GAAD,QAGJW,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAAChQ,GACND,QAAQC,MAAMA,EAAMiQ,c","file":"static/js/main.5b50a076.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export const APP_TITLE = \"Movies\";\r\nexport const MY_NAME = \"Guillaume Rachet\";\r\nexport const LOGIN_TITLE = \"Find the movie you looking for and (not) much more.\";\r\n\r\nexport const REPOSITORY_URL = \"https://github.com/grachet/react-redux-hook-ts-jest\";\r\nexport const PORTFOLIO_URL = \"https://grachet.github.io/\";\r\n\r\nexport const URL_PLACEHOLDER = process.env.PUBLIC_URL + \"/assets/placeholder_background.png\";\r\n\r\nexport const PAGE_TITLES: { [key: string]: string } = {\r\n    \"search\": \"Search\",\r\n    \"toprated\": \"Top rated\",\r\n    \"nowplaying\": \"Now Playing\",\r\n    \"upcoming\": \"Up Comming\",\r\n}","export const CLIENT_ID_GOOGLE = \"630819923790-5hdg04l3dqmoj8bues9a7dnerf7trehs.apps.googleusercontent.com\";\r\nexport const TMDB_API_KEY = \"1dc2b196ec51b322a69db96aa1c90dc9\";","import { CLIENT_ID_GOOGLE } from \"../../constantes/config\";\r\ndeclare global {\r\n    interface Window { gapi: any; }\r\n}\r\nconst { gapi } = window;\r\n\r\nexport const gapiLogin = async (onlyAlreadySigned: boolean = false): Promise<any> => {\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            gapi.load('client:auth2', resolve);\r\n        });\r\n        await window.gapi.auth2.init({\r\n            client_id: CLIENT_ID_GOOGLE,\r\n            scope: \"https://www.googleapis.com/auth/youtube.readonly\",\r\n        });\r\n        const authInstance = gapi.auth2.getAuthInstance();\r\n        const isSignedIn = authInstance.isSignedIn.get();\r\n        if (isSignedIn) {\r\n            return authInstance.currentUser.Xd;\r\n        } else if (!onlyAlreadySigned) {\r\n            return await authInstance.signIn();\r\n        }\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n    }\r\n    return null\r\n};\r\n\r\nexport const gapiLogout = async (): Promise<any> => {\r\n    try {\r\n        const authInstance = gapi.auth2.getAuthInstance();\r\n        await authInstance.signOut();\r\n        return true;\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return false;\r\n    }\r\n};","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { gapiLogin, gapiLogout } from './authAPI';\r\n\r\nconst ANONYMOUS_ACCOUNT: AccountType = {\r\n    email: \"Anonymous\",\r\n    profilePictureURL: \"https://assets.change.org/photos/3/pz/ur/IZPZUrJczRxOpDB-400x400-noPad.jpg?1528808989\",\r\n    fullName: \"Anonymous\",\r\n    isAnonymous: true,\r\n}\r\n\r\ntype AccountType = {\r\n    email: string,\r\n    profilePictureURL: string,\r\n    fullName: string,\r\n    isAnonymous: boolean,\r\n}\r\n\r\nexport interface AuthState {\r\n    account: null | AccountType;\r\n    status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    account: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const login = createAsyncThunk(\r\n    'auth/login',\r\n    async (onlyAlreadySigned: boolean = false) => {\r\n        const response = await gapiLogin(onlyAlreadySigned);\r\n        return {\r\n            email: response.it.Tt,\r\n            profilePictureURL: response.it.kK,\r\n            fullName: response.it.Se,\r\n            isAnonymous: false\r\n        };\r\n    }\r\n);\r\n\r\nexport const logout = createAsyncThunk(\r\n    'auth/logout',\r\n    async (_, { getState }) => {\r\n        const { auth } = getState() as { auth: AuthState };\r\n        if (!auth?.account?.isAnonymous) {\r\n            await gapiLogout();\r\n        }\r\n        return null;\r\n    }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        loginAnonymous: (state) => { state.account = ANONYMOUS_ACCOUNT },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(login.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(login.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.account = action.payload;\r\n            })\r\n            .addCase(logout.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(logout.fulfilled, (state) => {\r\n                state.status = 'idle';\r\n                state.account = null;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { loginAnonymous } = authSlice.actions;\r\n\r\nexport const selectAuth = (state: RootState) => state.auth.account;\r\n\r\nexport default authSlice.reducer;\r\n","import { IconButton } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport {\r\n    logout,\r\n    selectAuth\r\n} from './authSlice';\r\n\r\nfunction LogoutUserAvatar() {\r\n\r\n    const account = useAppSelector(selectAuth);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Tooltip title={\"Logout from \" + account?.email}>\r\n            <IconButton size=\"large\" color=\"inherit\" onClick={() => dispatch(logout())}>\r\n                <Avatar alt={account?.fullName} src={account?.profilePictureURL} />\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default LogoutUserAvatar;","import { Location } from 'history';\r\nimport { MovieKeyType } from '../features/movie/movieSlice';\r\n\r\nexport const locationToMovieType = (location: Location<unknown>): MovieKeyType => {\r\n    const name = location.pathname.substring(1);\r\n    if (name === \"upcoming\" || name === \"nowplaying\" || name === \"toprated\") {\r\n        return name;\r\n    } else {\r\n        return \"search\";\r\n    }\r\n}","import { TMDB_API_KEY } from \"../../constantes/config\";\r\nimport { GenreAPIType, MovieType } from \"./movieSlice\";\r\n\r\nconst API_URL_TMDB = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const IMAGE_URL_TMDB: string = \"http://image.tmdb.org/t/p/w500/\";\r\n\r\nexport const getApiUrlTMDB = (endpoint: string, page: number | string = 0): string => API_URL_TMDB + endpoint + \"?api_key=\" + TMDB_API_KEY + \"&page=\" + page;\r\n\r\nexport const getSearchApiUrlTMDB = (page: number | string = 0, query: string = \"\"): string => API_URL_TMDB + \"search/movie?api_key=\" + TMDB_API_KEY + \"&query=\" + query + \"&page=\" + page;\r\n\r\nexport const getGenreIdMovies = async (): Promise<GenreAPIType[]> => {\r\n    try {\r\n        const rep = await fetch(API_URL_TMDB + \"genre/movie/list?api_key=\" + TMDB_API_KEY);\r\n        const json = await rep.json()\r\n        return json.genres;\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return [];\r\n    }\r\n};\r\n\r\nexport const getSearchMovies = async (query: string, page: number = 0): Promise<{ results: MovieType[] } | null> => {\r\n    try {\r\n        const rep = await fetch(getSearchApiUrlTMDB(page, query));\r\n        const movies = await rep.json()\r\n        return movies\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getNowPlayingMovies = async (page: number = 0): Promise<{ results: MovieType[] } | null> => {\r\n    try {\r\n        const rep = await fetch(getApiUrlTMDB(\"movie/now_playing\", page));\r\n        const movies = await rep.json()\r\n        return movies\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getUpcomingMovies = async (page: number = 0): Promise<{ results: MovieType[] } | null> => {\r\n    try {\r\n        const rep = await fetch(getApiUrlTMDB(\"movie/upcoming\", page));\r\n        const movies = await rep.json()\r\n        return movies\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const getTopRatedMovies = async (page: number = 0): Promise<{ results: MovieType[] } | null> => {\r\n    try {\r\n        const rep = await fetch(getApiUrlTMDB(\"movie/top_rated\", page));\r\n        const movies = await rep.json()\r\n        return movies\r\n    } catch (error: unknown) {\r\n        console.error(error)\r\n        return null;\r\n    }\r\n};\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../app/store';\r\nimport { getNowPlayingMovies, getUpcomingMovies, getTopRatedMovies, getSearchMovies, getGenreIdMovies } from './movieAPI';\r\n\r\nexport type MovieKeyType = \"search\" | \"nowplaying\" | \"upcoming\" | \"toprated\";\r\n\r\nexport type GenreAPIType = { id: number, name: string };\r\n\r\nexport type MovieType = {\r\n    adult: boolean,\r\n    backdrop_path: string,\r\n    genre_ids: number[],\r\n    id: number,\r\n    original_language: string,\r\n    original_title: string,\r\n    overview: string,\r\n    popularity: number,\r\n    poster_path: string,\r\n    release_date: string,\r\n    title: string,\r\n    video: boolean,\r\n    vote_average: number,\r\n    vote_count: number,\r\n};\r\nexport interface MovieState {\r\n    genre: { [key: number]: string },\r\n    search: MovieType[]\r\n    nowplaying: MovieType[];\r\n    upcoming: MovieType[];\r\n    toprated: MovieType[];\r\n    nowplayingPage: number;\r\n    upcomingPage: number;\r\n    topratedPage: number;\r\n    status: 'idle' | 'loading' | 'failed';\r\n}\r\n\r\nconst initialState: MovieState = {\r\n    genre: {},\r\n    search: [],\r\n    nowplaying: [],\r\n    upcoming: [],\r\n    toprated: [],\r\n    nowplayingPage: 1,\r\n    upcomingPage: 1,\r\n    topratedPage: 1,\r\n    status: 'idle',\r\n};\r\n\r\nexport const getGenre = createAsyncThunk(\r\n    'movie/genre',\r\n    async () => {\r\n        const response = await getGenreIdMovies();\r\n        return response?.reduce((obj: { [key: string]: string }, item: GenreAPIType) => ({ ...obj, [item.id]: item.name }), {}) || {};\r\n    }\r\n);\r\n\r\n\r\nexport const search = createAsyncThunk(\r\n    'movie/search',\r\n    async (query: string = \"\") => {\r\n        const response = await getSearchMovies(query, 1);\r\n        console.log(response)\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\n\r\nexport const toprated = createAsyncThunk(\r\n    'movie/toprated',\r\n    async (_, { getState }) => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await getTopRatedMovies(movie.topratedPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\nexport const nowplaying = createAsyncThunk(\r\n    'movie/nowplaying',\r\n    async (_, { getState }) => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await getNowPlayingMovies(movie.nowplayingPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\nexport const upcoming = createAsyncThunk(\r\n    'movie/upcoming',\r\n    async (_, { getState }) => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await getUpcomingMovies(movie.upcomingPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\n\r\nexport const movieSlice = createSlice({\r\n    name: 'Movie',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getGenre.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getGenre.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.genre = action.payload;\r\n            })\r\n            .addCase(search.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(search.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.search = action.payload;\r\n            })\r\n            .addCase(nowplaying.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(nowplaying.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.nowplaying = [...state.nowplaying, ...action.payload];\r\n                state.nowplayingPage++;\r\n            })\r\n            .addCase(upcoming.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(upcoming.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.upcoming = [...state.upcoming, ...action.payload];\r\n                state.upcomingPage++;\r\n            })\r\n            .addCase(toprated.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(toprated.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.toprated = [...state.toprated, ...action.payload];\r\n                state.topratedPage++;\r\n            })\r\n    },\r\n});\r\n\r\nexport const selectMovie = (state: RootState) => state.movie;\r\n\r\nexport default movieSlice.reducer;\r\n","import RefreshIcon from '@mui/icons-material/Refresh';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport { Box, Button, CardHeader, Rating, Theme } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { default as React, useEffect } from 'react';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport { Dispatch } from 'redux';\r\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\r\nimport { URL_PLACEHOLDER } from '../../constantes/textConstantes';\r\nimport { locationToMovieType } from '../../functions/helperFunctions';\r\nimport { IMAGE_URL_TMDB } from './movieAPI';\r\nimport { getGenre, MovieKeyType, MovieType, nowplaying, search, selectMovie, toprated, upcoming } from './movieSlice';\r\n\r\nconst dispatchGetMovie = (dispatch: Dispatch<any>, movieType: string) => {\r\n    if (movieType === \"toprated\") {\r\n        dispatch(toprated())\r\n    } else if (movieType === \"nowplaying\") {\r\n        dispatch(nowplaying())\r\n    } else if (movieType === \"upcoming\") {\r\n        dispatch(upcoming())\r\n    }\r\n}\r\n\r\nfunction MovieList() {\r\n\r\n    const { searchText }: { searchText?: string } = useParams();\r\n    const location = useLocation();\r\n    const movieType: MovieKeyType = locationToMovieType(location);\r\n    const { [movieType]: movies, status, genre } = useAppSelector(selectMovie);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!movies.length) {\r\n            dispatchGetMovie(dispatch, movieType)\r\n        }\r\n    }, [dispatch, movies, movieType])\r\n\r\n    useEffect(() => {\r\n        if (!!searchText) {\r\n            dispatch(search(searchText))\r\n        }\r\n    }, [dispatch, searchText])\r\n\r\n    useEffect(() => {\r\n        if (!Object.keys(genre).length) {\r\n            dispatch(getGenre())\r\n        }\r\n    }, [dispatch, genre])\r\n\r\n    return (\r\n        <Container sx={{ mt: 8, py: 4 }} maxWidth=\"xl\">\r\n            <Grid container spacing={4}>\r\n                {!!searchText && status !== \"loading\" && !movies.length && <Grid item xs={12}   >\r\n                    <Typography component=\"div\" variant=\"button\" color=\"primary\" sx={{ textAlign: \"center\" }} >\r\n                        Nothing found <SentimentVeryDissatisfiedIcon sx={{ verticalAlign: \"middle\" }} />\r\n                    </Typography>\r\n                </Grid>}\r\n                {movies.map(({ id, title, overview, backdrop_path, vote_average, release_date, genre_ids }: MovieType) => (\r\n                    <Grid item key={id} xs={12} sm={6} md={4} lg={3}>\r\n                        <Card\r\n                            sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                        >\r\n                            <CardHeader\r\n                                titleTypographyProps={{ variant: \"subtitle2\" }}\r\n                                subheaderTypographyProps={{ variant: \"button\" }}\r\n                                title={title}\r\n                                subheader={<>\r\n                                    {release_date}\r\n                                    <Rating sx={{ float: \"right\" }} size=\"small\" name=\"read-only\" value={vote_average / 2} readOnly />\r\n                                </>\r\n                                }\r\n                            />\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                sx={{ backgroundColor: (theme: Theme) => theme.palette.common.black }}\r\n                                image={backdrop_path ? IMAGE_URL_TMDB + backdrop_path : URL_PLACEHOLDER}\r\n                                alt=\"random\"\r\n                            />\r\n                            <Box sx={{ flexGrow: 1, px: 1.5, pt: 1.5 }}>\r\n                                <Typography\r\n                                    sx={{ fontSize: 12, color: (theme: Theme) => theme.palette.text.secondary }}\r\n                                >\r\n                                    <TextTruncate\r\n                                        line={3}\r\n                                        element=\"span\"\r\n                                        truncateText=\"…\"\r\n                                        text={overview}\r\n                                    />\r\n                                </Typography>\r\n                            </Box>\r\n                            <Box sx={{ px: 1.5, pb: 0.5 }}>\r\n                                <Typography key={id} variant=\"button\" color=\"primary\" sx={{ fontSize: 12 }} >\r\n                                    {genre_ids.slice(0, 3).map((id: number) => genre[id]).join(\" / \")}\r\n                                </Typography>\r\n                            </Box>\r\n                        </Card>\r\n                    </Grid>\r\n                ))}\r\n                {!searchText && status !== \"loading\" && <Grid item xs={12} >\r\n\r\n                    <Button variant=\"outlined\"\r\n                        onClick={() => dispatchGetMovie(dispatch, movieType)}\r\n                    >\r\n                        <RefreshIcon sx={{ mr: 1 }} />\r\n                        More\r\n                    </Button>\r\n                </Grid>}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MovieList;","import EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport { IconButton, LinearProgress } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { EventHandler, KeyboardEvent, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { APP_TITLE, PAGE_TITLES } from '../../../constantes/textConstantes';\r\nimport LogoutUserAvatar from '../../../features/auth/LogoutUserAvatar';\r\nimport MovieList from '../../../features/movie/MovieList';\r\nimport { MovieKeyType, selectMovie } from '../../../features/movie/movieSlice';\r\nimport { useAppSelector } from '../../hooks';\r\nimport { locationToMovieType } from './../../../functions/helperFunctions';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(2),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\r\n    width: 300,\r\n    flexShrink: 0,\r\n    '& .MuiDrawer-paper': {\r\n        width: 300,\r\n        boxSizing: 'border-box',\r\n    },\r\n}));\r\n\r\nexport default function Home() {\r\n\r\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const { status } = useAppSelector(selectMovie);\r\n    const PageType: MovieKeyType = locationToMovieType(location);\r\n\r\n    const changeMovieType = (MovieType: string) => {\r\n        setOpenDrawer(false)\r\n        history.push(MovieType)\r\n    }\r\n\r\n    const searchPressEnter: EventHandler<KeyboardEvent<HTMLInputElement>> = (e) => {\r\n        if (e.key === 'Enter') {\r\n            history.push(\"/search/\" + (e.target as HTMLInputElement).value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        < >\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton size=\"large\" color=\"inherit\" sx={{ mr: 4 }} onClick={() => setOpenDrawer(true)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>\r\n                        {APP_TITLE}\r\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"span\" sx={{ ml: 2 }}>\r\n                            {PAGE_TITLES[PageType]}\r\n                        </Typography>\r\n                    </Typography>\r\n                    <Search>\r\n                        <SearchIconWrapper>\r\n                            <SearchIcon />\r\n                        </SearchIconWrapper>\r\n                        <StyledInputBase\r\n                            onKeyPress={searchPressEnter}\r\n                            placeholder=\"Search ⏎\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </Search>\r\n                    <LogoutUserAvatar />\r\n                </Toolbar>\r\n                {status === 'loading' && <LinearProgress />}\r\n            </AppBar>\r\n            <main  >\r\n                <MovieList />\r\n            </main>\r\n            <StyledDrawer\r\n                anchor=\"left\"\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={() => changeMovieType(\"/toprated\")}>\r\n                        <ListItemIcon>\r\n                            <ExploreIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Top rated\"} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button onClick={() => changeMovieType(\"/nowplaying\")}>\r\n                        <ListItemIcon>\r\n                            <TimerIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Now Playing\"} />\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => changeMovieType(\"/upcoming\")} >\r\n                        <ListItemIcon>\r\n                            < EventNoteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Up Comming\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </StyledDrawer >\r\n        </>\r\n    );\r\n}","import Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useAppDispatch } from '../../app/hooks';\r\nimport BathtubIcon from '@mui/icons-material/Bathtub';\r\nimport {\r\n    login,\r\n    loginAnonymous\r\n} from './authSlice';\r\n\r\nconst GoogleButton = styled(Button)(({ theme }) => ({\r\n    textTransform: \"none\",\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.grey[600],\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.grey[300],\r\n    }\r\n}));\r\n\r\nfunction LoginButton() {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(login(true))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <GoogleButton\r\n                // disabled={!loaded}\r\n                variant=\"contained\"\r\n                onClick={() => dispatch(login())}\r\n            >\r\n                <img alt=\"Google logo\" src={process.env.PUBLIC_URL + \"/assets/google_logo.svg\"} style={{ marginRight: 10 }} />\r\n                Sign in with Google\r\n            </GoogleButton>\r\n            <Button variant=\"outlined\"\r\n                onClick={() => dispatch(loginAnonymous())}>\r\n                <BathtubIcon sx={{ mr: 1 }} /> Anonymous\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginButton;","import SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport { APP_TITLE, LOGIN_TITLE, MY_NAME, PORTFOLIO_URL } from '../../../constantes/textConstantes';\r\nimport LoginButton from '../../../features/auth/LoginButton';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href={PORTFOLIO_URL}>\r\n                {MY_NAME}\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default function Home() {\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            minHeight: \"100vh\"\r\n        }}>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container component=\"main\" maxWidth=\"xl\" sx={{ flexGrow: 1 }}>\r\n                <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h2\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                    >\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\r\n                        {LOGIN_TITLE}\r\n                    </Typography>\r\n                    <Stack\r\n                        sx={{ pt: 4 }}\r\n                        direction=\"row\"\r\n                        spacing={2}\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <LoginButton />\r\n                    </Stack>\r\n                </Container>\r\n            </Container >\r\n            <Box sx={{ p: 6 }} component=\"footer\">\r\n                <Copyright />\r\n            </Box>\r\n        </Box >\r\n    );\r\n}","import { CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch, Redirect\n} from \"react-router-dom\";\nimport './App.css';\nimport { useAppSelector } from './app/hooks';\nimport Home from './app/pages/home/Home';\nimport Login from './app/pages/login/Login';\nimport { selectAuth } from './features/auth/authSlice';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#FF0000',\n    },\n    secondary: {\n      main: '#fff',\n    },\n  },\n});\n\nfunction App() {\n\n  const account = useAppSelector(selectAuth);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            {!!account && <Redirect to='/toprated' />}\n            <Login />\n          </Route>\n          <Route path=\"/search/:searchText\">\n            {!account && <Redirect to='/login' />}\n            <Home />\n          </Route>\n          <Route path=\"/toprated\">\n            {!account && <Redirect to='/login' />}\n            <Home />\n          </Route>\n          <Route path=\"/nowplaying\">\n            {!account && <Redirect to='/login' />}\n            <Home />\n          </Route>\n          <Route path=\"/upcoming\">\n            {!account && <Redirect to='/login' />}\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Redirect to='/toprated' />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport authReducer from '../features/auth/authSlice';\nimport movieReducer from './../features/movie/movieSlice';\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    movie: movieReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}