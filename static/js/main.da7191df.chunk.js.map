{"version":3,"sources":["constantes/config.ts","app/pages/home/Home.tsx","constantes/textConstantes.ts","app/pages/login/Login.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CLIENT_ID_GOOGLE","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","marginRight","spacing","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","StyledDrawer","Drawer","flexShrink","boxSizing","cards","Home","useState","openDrawer","setOpenDrawer","errorMessage","location","useLocation","history","useHistory","videoType","pathname","substring","changeVideoType","push","signOut","useGoogleLogout","onLogoutSuccess","clientId","AppBar","Toolbar","IconButton","size","sx","mr","onClick","Typography","variant","noWrap","flexGrow","xs","sm","component","ml","placeholder","inputProps","Avatar","alt","src","Container","py","maxWidth","Grid","container","map","card","item","md","lg","Card","flexDirection","CardMedia","image","CardContent","gutterBottom","anchor","open","onClose","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Alert","severity","AlertTitle","APP_TITLE","Copyright","align","Link","href","Date","getFullYear","GoogleButton","Button","textTransform","grey","setErrorMessage","useGoogleLogin","onSuccess","response","console","log","cookiePolicy","isSignedIn","fetchBasicProfile","onFailure","error","message","signIn","loaded","Box","minHeight","mt","paragraph","Stack","pt","direction","disabled","process","style","window","p","createTheme","mode","main","secondary","App","ThemeProvider","CssBaseline","path","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"wlBAAaA,EAAmB,2E,OC6B1BC,EAASC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBACzBC,SAAU,WACVC,aAAcF,EAAMG,MAAMD,aAC1BE,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,KACnD,UAAW,CACPJ,gBAAiBC,YAAML,EAAMM,QAAQC,OAAOC,MAAO,MAEvDC,WAAY,EACZC,YAAaV,EAAMW,QAAQ,GAC3BC,MAAO,QACNZ,EAAMa,YAAYC,GAAG,MAAQ,CAC1BL,WAAYT,EAAMW,QAAQ,GAC1BC,MAAO,YAITG,EAAoBhB,YAAO,MAAPA,EAAc,kBAAgB,CACpDiB,QADoC,EAAGhB,MACxBW,QAAQ,EAAG,GAC1BM,OAAQ,OACRhB,SAAU,WACViB,cAAe,OACfC,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGdC,EAAkBvB,YAAOwB,IAAPxB,EAAkB,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACtDwB,MAAO,UACP,wBAAwB,aACpBR,QAAShB,EAAMW,QAAQ,EAAG,EAAG,EAAG,GAEhCc,YAAY,cAAD,OAAgBzB,EAAMW,QAAQ,GAA9B,KACXe,WAAY1B,EAAM2B,YAAYC,OAAO,SACrChB,MAAO,QACNZ,EAAMa,YAAYC,GAAG,MAAQ,CAC1BF,MAAO,OACP,UAAW,CACPA,MAAO,cAMjBiB,EAAe9B,YAAO+B,IAAP/B,EAAe,cAAGC,MAAH,MAAgB,CAChDY,MAAO,IACPmB,WAAY,EACZ,qBAAsB,CAClBnB,MAAO,IACPoB,UAAW,kBAIbC,GAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAExB,SAASC,KAAQ,IAAD,EAESC,oBAAkB,GAF3B,mBAEpBC,EAFoB,KAERC,EAFQ,OAGaF,mBAAiB,IAH9B,mBAGpBG,EAHoB,KAIrBC,GAJqB,KAIVC,eACXC,EAAUC,cACVC,EAAYJ,EAASK,SAASC,UAAU,GAMxCC,EAAkB,SAACH,GACrBN,GAAc,GACdI,EAAQM,KAAKJ,IAGTK,EAAYC,0BAAgB,CAChCC,gBAVoB,WACpBT,EAAQM,KAAK,WAUbI,SAAUtD,IAFNmD,QAKR,OACI,qCACI,cAACI,EAAA,EAAD,CAAQnD,SAAS,WAAjB,SACI,eAACoD,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQ/B,MAAM,UAAUgC,GAAI,CAAEC,GAAI,GAAKC,QAAS,kBAAMrB,GAAc,IAArF,SACI,cAAC,IAAD,MAEJ,cAAC,IAAD,CAAqBb,MAAM,UAAUgC,GAAI,CAAEC,GAAI,KAC/C,eAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKpC,MAAM,UAAUqC,QAAM,EAACL,GAAI,CAAEM,SAAU,EAAG3C,QAAS,CAAE4C,GAAI,OAAQC,GAAI,UAA9F,sBAEI,cAACL,EAAA,EAAD,CAAYC,QAAQ,SAASpC,MAAM,gBAAgByC,UAAU,OAAOT,GAAI,CAAEU,GAAI,GAA9E,SACKvB,OAGT,eAAC,EAAD,WACI,cAAC5B,EAAD,UACI,cAAC,IAAD,MAEJ,cAACO,EAAD,CACI6C,YAAY,eACZC,WAAY,CAAE,aAAc,eAGpC,cAACd,EAAA,EAAD,CAAYC,KAAK,QAAQ/B,MAAM,UAAUkC,QAASV,EAAlD,SACI,cAACqB,EAAA,EAAD,CAAQC,IAAI,aAAaC,IAAI,uCAIzC,+BACI,cAACC,EAAA,EAAD,CAAWhB,GAAI,CAAEiB,GAAI,GAAKC,SAAS,KAAnC,SACI,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACjE,QAAS,EAAzB,SACKsB,GAAM4C,KAAI,SAACC,GAAD,OACP,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAYhB,GAAI,GAAIC,GAAI,EAAGgB,GAAI,EAAGC,GAAI,EAAhD,SACI,eAACC,EAAA,EAAD,CACI1B,GAAI,CAAEvC,OAAQ,OAAQE,QAAS,OAAQgE,cAAe,UAD1D,UAGI,cAACC,EAAA,EAAD,CACInB,UAAU,MACVT,GAAI,GAIJ6B,MAAM,qCACNf,IAAI,WAER,eAACgB,EAAA,EAAD,CAAa9B,GAAI,CAAEM,SAAU,GAA7B,UACI,cAACH,EAAA,EAAD,CAAY4B,cAAY,EAAC3B,QAAQ,KAAKK,UAAU,KAAhD,qBAGA,cAACN,EAAA,EAAD,CAAYC,QAAQ,QAAQpC,MAAM,gBAAlC,4FAjBIsD,YA4BhC,cAACjD,EAAD,CACI2D,OAAO,OACPC,KAAMrD,EACNsD,QAAS,kBAAMrD,GAAc,IAHjC,SAKI,eAACsD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAUC,QAAM,EAACnC,QAAS,kBAAMZ,EAAgB,SAAhD,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAS,YAE3B,eAACJ,EAAA,EAAD,CAAUC,QAAM,EAACnC,QAAS,kBAAMZ,EAAgB,YAAhD,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAS,eAE3B,cAACC,EAAA,EAAD,IACA,eAACL,EAAA,EAAD,CAAUC,QAAM,EAACnC,QAAS,kBAAMZ,EAAgB,iBAAhD,UACI,cAACgD,EAAA,EAAD,UACI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CAAcC,QAAS,2BAIhC1D,GAAgB,eAAC4D,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACf,cAACC,EAAA,EAAD,oBACC9D,Q,gEClMJ+D,GAAY,YCkBzB,SAASC,KACL,OACI,eAAC3C,EAAA,EAAD,CAAYC,QAAQ,QAAQpC,MAAM,iBAAiB+E,MAAM,SAAzD,UACK,kBACD,cAACC,GAAA,EAAD,CAAMhF,MAAM,UAAUiF,KDhBL,6BCgBjB,SDrBW,qBCuBH,KACP,IAAIC,MAAOC,cACX,OAKb,IAAMC,GAAe7G,YAAO8G,KAAP9G,EAAe,gBAAGC,EAAH,EAAGA,MAAH,oBAChC8G,cAAe,OACf1G,gBAAiBJ,EAAMM,QAAQC,OAAOC,MACtCgB,MAAOxB,EAAMM,QAAQyG,KAAK,MACzB,UAAY,CACT3G,gBAAiBJ,EAAMM,QAAQyG,KAAK,UAI7B,SAAS7E,KAEpB,IAAMO,EAAUC,cAFW,EAGaP,mBAAiB,IAH9B,mBAGpBG,EAHoB,KAGN0E,EAHM,OAeAC,yBAAe,CACtCC,UAXmB,SAACC,GACpBC,QAAQC,IAAIF,GACZ1E,EAAQM,KAAK,UAWbI,SAAUtD,EACVyH,aAAc,qBAIdC,YAAY,EACZC,mBAAmB,EAGnBC,UAjBmB,SAACC,GACpBN,QAAQM,MAAMA,GACdV,EAAgBU,EAAMC,YAGlBC,EAfmB,EAenBA,OAAQC,EAfW,EAeXA,OAsBhB,OACI,eAACC,GAAA,EAAD,CAAKtE,GAAI,CACLrC,QAAS,OACTgE,cAAe,SACf/D,WAAY,SACZ2G,UAAW,SAJf,UAMI,cAAC3E,EAAA,EAAD,CAAQnD,SAAS,WAAjB,SACI,eAACoD,EAAA,EAAD,WACI,cAAC,IAAD,CAAqB7B,MAAM,UAAUgC,GAAI,CAAEC,GAAI,KAC/C,cAACE,EAAA,EAAD,CAAYC,QAAQ,KAAKpC,MAAM,UAAUqC,QAAM,EAA/C,SACKwC,UAIb,cAAC7B,EAAA,EAAD,CAAWP,UAAU,OAAOS,SAAS,KAAKlB,GAAI,CAAEM,SAAU,GAA1D,SACI,eAACU,EAAA,EAAD,CAAWE,SAAS,KAAKlB,GAAI,CAAEwE,GAAI,GAAnC,UACI,cAACrE,EAAA,EAAD,CACIM,UAAU,KACVL,QAAQ,KACR2C,MAAM,SACN/E,MAAM,eACN+D,cAAY,EALhB,SAOKc,KAEL,cAAC1C,EAAA,EAAD,CAAYC,QAAQ,KAAK2C,MAAM,SAAS/E,MAAM,iBAAiByG,WAAS,EAAxE,SDrGO,2DCwGP,cAACtE,EAAA,EAAD,CAAYC,QAAQ,QAAQ2C,MAAM,SAAS/E,MAAM,iBAAiByG,WAAS,EAA3E,SDvGU,2BC0GV,eAACC,GAAA,EAAD,CACI1E,GAAI,CAAE2E,GAAI,GACVC,UAAU,MACVzH,QAAS,EACTU,eAAe,SAJnB,UAMI,eAACuF,GAAD,CACIyB,UAAWR,EACXjE,QAAQ,YAAYF,QAASkE,EAFjC,UAGI,qBAAKrD,IAAK+D,mDAAoDC,MAAO,CAAE7H,YAAa,MAHxF,yBAMA,eAACmG,GAAA,EAAD,CAAQjD,QAAQ,WAAWF,QAAS,kBAAM8E,OAAO/C,KDpH3C,wDCoHN,UAAuE,cAAC,KAAD,CAAUjC,GAAI,CAAEC,GAAI,KAA3F,yBAIZ,cAACqE,GAAA,EAAD,CAAKtE,GAAI,CAAEiF,EAAG,GAAKxE,UAAU,SAA7B,SACI,cAACqC,GAAD,QAEDhE,GAAgB,eAAC4D,EAAA,EAAD,CAAOC,SAAS,QAAhB,UACf,cAACC,EAAA,EAAD,oBACC9D,QCxHjB,IAAMtC,GAAQ0I,YAAY,CACxBpI,QAAS,CACPqI,KAAM,OACN3C,QAAS,CACP4C,KAAM,WAERC,UAAW,CACTD,KAAM,WAgCGE,OA3Bf,WACE,OACE,eAACC,EAAA,EAAD,CAAe/I,MAAOA,GAAtB,UACE,cAACgJ,EAAA,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,e,sCCxCL,SAASC,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAA0B,SAACC,GAAD,OACnCC,YAAW,kBAAMD,EAAQ,CAAEE,KAAMJ,MAAW,QCMhD,IAUaK,GAAiBC,aAC5B,qBAD4C,yCAE5C,WAAON,GAAP,gBAAAO,EAAA,sEACyBR,GAAWC,GADpC,cACQhC,EADR,yBAGSA,EAASoC,MAHlB,2CAF4C,uDASjCI,GAAeC,aAAY,CACtCC,KAAM,UACNC,aArBiC,CACjCC,MAAO,EACPC,OAAQ,QAqBRC,SAAU,CACRC,UAAW,SAACC,GAKVA,EAAMJ,OAAS,GAEjBK,UAAW,SAACD,GACVA,EAAMJ,OAAS,GAGjBM,kBAAmB,SAACF,EAAOG,GACzBH,EAAMJ,OAASO,EAAOC,UAK1BC,cAAe,SAACC,GACdA,EACGC,QAAQlB,GAAemB,SAAS,SAACR,GAChCA,EAAMH,OAAS,aAEhBU,QAAQlB,GAAeoB,WAAW,SAACT,EAAOG,GACzCH,EAAMH,OAAS,OACfG,EAAMJ,OAASO,EAAOC,c,GAK6BZ,GAAakB,QAmBzDlB,I,GAnBAO,U,GAAWE,U,GAAWC,kBAmBtBV,GAAf,SC9EamB,GAAQC,aAAe,CAClCC,QAAS,CACPC,QAASC,M,SCOOC,QACW,cAA7B3C,OAAOjG,SAAS6I,UAEe,UAA7B5C,OAAOjG,SAAS6I,UAEhB5C,OAAOjG,SAAS6I,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUV,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJW,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACvE,GACNN,QAAQM,MAAMA,EAAMC,c","file":"static/js/main.da7191df.chunk.js","sourcesContent":["export const CLIENT_ID_GOOGLE = \"630819923790-5hdg04l3dqmoj8bues9a7dnerf7trehs.apps.googleusercontent.com\";","import ExploreIcon from '@mui/icons-material/Explore';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport SubscriptionsIcon from '@mui/icons-material/Subscriptions';\r\nimport { Alert, AlertTitle, IconButton } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Container from '@mui/material/Container';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport Grid from '@mui/material/Grid';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { useState } from 'react';\r\nimport { GoogleLoginResponse, GoogleLoginResponseOffline, useGoogleLogout } from 'react-google-login';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { CLIENT_ID_GOOGLE } from '../../../constantes/config';\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(2),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\r\n    width: 300,\r\n    flexShrink: 0,\r\n    '& .MuiDrawer-paper': {\r\n        width: 300,\r\n        boxSizing: 'border-box',\r\n    },\r\n}));\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nexport default function Home() {\r\n\r\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const videoType = location.pathname.substring(1);\r\n\r\n    const onLogoutSuccess = () => {\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    const changeVideoType = (videoType: string) => {\r\n        setOpenDrawer(false)\r\n        history.push(videoType)\r\n    }\r\n\r\n    const { signOut } = useGoogleLogout({\r\n        onLogoutSuccess: onLogoutSuccess,\r\n        clientId: CLIENT_ID_GOOGLE,\r\n    })\r\n\r\n    return (\r\n        < >\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <IconButton size=\"large\" color=\"inherit\" sx={{ mr: 4 }} onClick={() => setOpenDrawer(true)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>\r\n                        VideoTube\r\n                        <Typography variant=\"button\" color=\"textSecondary\" component=\"span\" sx={{ ml: 2 }}>\r\n                            {videoType}\r\n                        </Typography>\r\n                    </Typography>\r\n                    <Search>\r\n                        <SearchIconWrapper>\r\n                            <SearchIcon />\r\n                        </SearchIconWrapper>\r\n                        <StyledInputBase\r\n                            placeholder=\"Search…\"\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </Search>\r\n                    <IconButton size=\"large\" color=\"inherit\" onClick={signOut}>\r\n                        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main>\r\n                <Container sx={{ py: 8 }} maxWidth=\"xl\">\r\n                    <Grid container spacing={4}>\r\n                        {cards.map((card) => (\r\n                            <Grid item key={card} xs={12} sm={6} md={4} lg={3}>\r\n                                <Card\r\n                                    sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n                                >\r\n                                    <CardMedia\r\n                                        component=\"img\"\r\n                                        sx={{\r\n                                            // 16:9\r\n                                            // pt: '56.25%', \r\n                                        }}\r\n                                        image=\"https://source.unsplash.com/random\"\r\n                                        alt=\"random\"\r\n                                    />\r\n                                    <CardContent sx={{ flexGrow: 1 }}>\r\n                                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                                            Heading\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                            This is a media card. You can use this section to describe the\r\n                                            content.\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Container>\r\n            </main>\r\n            <StyledDrawer\r\n                anchor=\"left\"\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={() => changeVideoType(\"home\")}>\r\n                        <ListItemIcon>\r\n                            <HomeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Home\"} />\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => changeVideoType(\"explore\")}>\r\n                        <ListItemIcon>\r\n                            <ExploreIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Explore\"} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button onClick={() => changeVideoType(\"subscription\")} >\r\n                        <ListItemIcon>\r\n                            <SubscriptionsIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Subscription\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </StyledDrawer >\r\n            {!!errorMessage && <Alert severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                {errorMessage}\r\n            </Alert>}\r\n        </>\r\n    );\r\n}","export const APP_TITLE = \"VideoTube\";\r\nexport const MY_NAME = \"Guillaume Rachet\";\r\nexport const LOGIN_TITLE = \"A really original and refreshing way to watch content.\";\r\nexport const LOGIN_SUBTITLE = \"No comparison allowed*\";\r\n\r\nexport const REPOSITORY_URL = \"https://github.com/grachet/react-redux-hook-ts-jest\";\r\nexport const PORTFOLIO_URL = \"https://grachet.github.io/\";\r\n\r\n","import CodeIcon from '@mui/icons-material/Code';\r\nimport SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport Stack from '@mui/material/Stack';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { GoogleLogin, useGoogleLogin, GoogleLoginResponse, GoogleLoginResponseOffline } from 'react-google-login';\r\nimport { APP_TITLE, LOGIN_SUBTITLE, LOGIN_TITLE, MY_NAME, PORTFOLIO_URL, REPOSITORY_URL } from '../../../constantes/textConstantes';\r\nimport { Alert, AlertTitle } from '@mui/material';\r\nimport { CLIENT_ID_GOOGLE } from '../../../constantes/config';\r\nimport { alpha, styled } from '@mui/material/styles';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href={PORTFOLIO_URL}>\r\n                {MY_NAME}\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst GoogleButton = styled(Button)(({ theme }) => ({\r\n    textTransform: \"none\",\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.grey[600],\r\n    [\"&:hover\"]: {\r\n        backgroundColor: theme.palette.grey[300],\r\n    }\r\n}));\r\n\r\nexport default function Home() {\r\n\r\n    const history = useHistory();\r\n    const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n\r\n    const onLoginSuccess = (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\r\n        console.log(response);\r\n        history.push(\"/home\");\r\n    }\r\n\r\n    const onLoginFailure = (error: any) => {\r\n        console.error(error);\r\n        setErrorMessage(error.message)\r\n    }\r\n\r\n    const { signIn, loaded } = useGoogleLogin({\r\n        onSuccess: onLoginSuccess,\r\n        // onAutoLoadFinished,\r\n        clientId: CLIENT_ID_GOOGLE,\r\n        cookiePolicy: 'single_host_origin',\r\n        // loginHint,\r\n        // hostedDomain,\r\n        // autoLoad,\r\n        isSignedIn: true,\r\n        fetchBasicProfile: true,\r\n        // redirectUri,\r\n        // discoveryDocs,\r\n        onFailure: onLoginFailure,\r\n        // uxMode,\r\n        // scope,\r\n        // accessType,\r\n        // responseType,\r\n        // jsSrc,\r\n        // onRequest,\r\n        // prompt\r\n    })\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            minHeight: \"100vh\"\r\n        }}>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container component=\"main\" maxWidth=\"xl\" sx={{ flexGrow: 1 }}>\r\n                <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h2\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                    >\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\r\n                        {LOGIN_TITLE}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" align=\"center\" color=\"text.secondary\" paragraph>\r\n                        {LOGIN_SUBTITLE}\r\n                    </Typography>\r\n                    <Stack\r\n                        sx={{ pt: 4 }}\r\n                        direction=\"row\"\r\n                        spacing={2}\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <GoogleButton\r\n                            disabled={!loaded}\r\n                            variant=\"contained\" onClick={signIn}>\r\n                            <img src={process.env.PUBLIC_URL + \"/assets/google_logo.svg\"} style={{ marginRight: 10 }} />\r\n                            Sign in with Google\r\n                        </GoogleButton>\r\n                        <Button variant=\"outlined\" onClick={() => window.open(REPOSITORY_URL)}><CodeIcon sx={{ mr: 1 }} /> Repository</Button>\r\n                    </Stack>\r\n                </Container>\r\n            </Container >\r\n            <Box sx={{ p: 6 }} component=\"footer\">\r\n                <Copyright />\r\n            </Box>\r\n            {!!errorMessage && <Alert severity=\"error\">\r\n                <AlertTitle>Error</AlertTitle>\r\n                {errorMessage}\r\n            </Alert>}\r\n        </Box >\r\n    );\r\n}","import { CssBaseline } from '@mui/material';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport React from 'react';\nimport {\n  BrowserRouter as Router, Route, Switch\n} from \"react-router-dom\";\nimport './App.css';\nimport Home from './app/pages/home/Home';\nimport Login from './app/pages/login/Login';\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#FF0000',\n    },\n    secondary: {\n      main: '#fff',\n    },\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/home\">\n            <Home />\n          </Route>\n          <Route path=\"/explore\">\n            <Home />\n          </Route>\n          <Route path=\"/subscription\">\n            <Home />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}