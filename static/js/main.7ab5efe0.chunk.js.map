{"version":3,"sources":["redux/hooks.ts","constantes/constantes.ts","constantes/config.ts","features/auth/authService.ts","features/auth/authSlice.ts","features/auth/LogoutUserAvatar.tsx","functions/helperFunctions.ts","app/components/MovieDialogue.tsx","app/components/MovieCard.tsx","features/movie/movieService.ts","features/movie/movieSlice.ts","features/movie/MovieList.tsx","app/components/SearchBar.tsx","app/pages/Home.tsx","features/auth/LoginButton.tsx","app/components/Copyright.tsx","app/pages/Login.tsx","App.tsx","redux/store.ts","serviceWorker.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","APP_TITLE","API_URL_TMDB","IMAGE_URL_TMDB","PAGE_TITLES","ANONYMOUS_ACCOUNT","email","profilePictureURL","fullName","isAnonymous","CLIENT_ID_GOOGLE","TMDB_API_KEY","AuthService","gapi","this","window","a","onlyAlreadySigned","load","Promise","resolve","reject","auth2","init","client_id","authInstance","getAuthInstance","isSignedIn","get","signIn","profile","currentUser","getBasicProfile","getEmail","getImageUrl","getName","console","error","signOut","login","createAsyncThunk","authService","gapiLogin","logout","gapiLogout","authSlice","createSlice","name","initialState","account","status","reducers","loginAnonymous","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","actions","selectAuth","auth","LogoutUserAvatar","dispatch","Tooltip","title","IconButton","size","color","onClick","Avatar","alt","src","locationToMovieType","location","pathname","substring","MovieDialogue","endUrl","movie","genre","open","onClose","id","overview","vote_average","poster_path","release_date","genre_ids","Dialog","fullWidth","maxWidth","Grid","container","item","xs","sm","CardMedia","height","component","image","process","sx","display","flexDirection","Box","flexGrow","DialogTitle","Typography","variant","Rating","float","value","readOnly","DialogContent","DialogContentText","mt","slice","map","join","DialogActions","Button","StyledCard","styled","Card","theme","MovieCard","backdrop_path","useState","setOpen","CardActionArea","CardHeader","titleTypographyProps","subheaderTypographyProps","subheader","backgroundColor","palette","common","black","CardContent","text","secondary","line","element","truncateText","MovieService","getApiUrlTMDB","endpoint","page","fetch","rep","json","genres","query","movies","getGenre","movieService","getGenreIdMovies","response","reduce","obj","getSearch","getSearchMovies","results","getTopRated","_","getState","getTopRatedMovies","topratedPage","getNowPlaying","getNowPlayingMovies","nowplayingPage","getUpcoming","getUpcomingMovies","upcomingPage","movieSlice","search","nowplaying","upcoming","toprated","selectMovie","dispatchGetMovie","movieType","MovieList","searchText","useParams","useLocation","useEffect","length","Object","keys","Container","py","spacing","textAlign","verticalAlign","md","lg","mr","Search","position","borderRadius","shape","alpha","white","marginLeft","marginRight","width","breakpoints","up","SearchIconWrapper","padding","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","SearchBar","history","useHistory","onKeyPress","e","key","push","target","placeholder","inputProps","Home","useTheme","matchePhone","useMediaQuery","openDrawer","setOpenDrawer","PageType","changeMovieType","MovieType","AppBar","Toolbar","noWrap","ml","LinearProgress","StyledDrawer","anchor","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Drawer","flexShrink","boxSizing","GoogleButton","textTransform","grey","LoginButton","style","Copyright","align","Link","href","Date","getFullYear","RootBox","gutterBottom","paragraph","Stack","pt","direction","p","minHeight","createTheme","mode","main","App","ThemeProvider","CssBaseline","basename","path","to","store","configureStore","reducer","authReducer","movieReducer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7ab5efe0.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport type { RootState, AppDispatch } from './store';\r\n \r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { AccountType } from \"../features/auth/authTypes\";\r\n\r\nexport const APP_TITLE = \"Movies\";\r\nexport const MY_NAME = \"Guillaume Rachet\";\r\nexport const LOGIN_TITLE = \"Find the movie you are looking for\";\r\n\r\nexport const REPOSITORY_URL = \"https://github.com/grachet/react-redux-hook-ts-jest\";\r\nexport const PORTFOLIO_URL = \"https://grachet.github.io/\";\r\n\r\nexport const API_URL_TMDB = \"https://api.themoviedb.org/3/\";\r\nexport const IMAGE_URL_TMDB: string = \"https://image.tmdb.org/t/p/w500/\";\r\n\r\nexport const URL_PLACEHOLDER_BACKDROP = process.env.PUBLIC_URL + \"/assets/placeholder_background.png\";\r\nexport const URL_PLACEHOLDER_POSTER = process.env.PUBLIC_URL + \"/assets/placeholder_background.png\";\r\n\r\nexport const PAGE_TITLES: { [key: string]: string } = {\r\n    \"search\": \"Search\",\r\n    \"toprated\": \"Top rated\",\r\n    \"nowplaying\": \"Now Playing\",\r\n    \"upcoming\": \"Up Comming\",\r\n}\r\n\r\nexport const ANONYMOUS_PROFILE_PICTURE_URL = \"https://assets.change.org/photos/3/pz/ur/IZPZUrJczRxOpDB-400x400-noPad.jpg?1528808989\";\r\nexport const ANONYMOUS_ACCOUNT: AccountType = {\r\n    email: \"Anonymous\",\r\n    profilePictureURL: ANONYMOUS_PROFILE_PICTURE_URL,\r\n    fullName: \"Anonymous\",\r\n    isAnonymous: true,\r\n}","export const CLIENT_ID_GOOGLE = \"915885819539-hrv1jsda3sdd0bofocnpushg9oq1vc9q.apps.googleusercontent.com\";\r\nexport const TMDB_API_KEY = \"1dc2b196ec51b322a69db96aa1c90dc9\";","import { CLIENT_ID_GOOGLE } from \"../../constantes/config\";\r\nimport {   GapiType, AccountType } from \"./authTypes\";\r\n\r\ndeclare global {\r\n    interface Window { gapi: any; }\r\n}\r\n\r\nclass AuthService {\r\n\r\n    gapi: GapiType\r\n\r\n    constructor() {\r\n        this.gapi = window.gapi;\r\n    }\r\n\r\n    async gapiLogin(onlyAlreadySigned: boolean = false): Promise<AccountType | null> {\r\n        try {\r\n\r\n            if (!this.gapi?.load) {\r\n                return null\r\n            }\r\n\r\n            await new Promise((resolve, reject) => {\r\n                this.gapi.load('client:auth2', resolve);\r\n            });\r\n            await this.gapi.auth2.init({\r\n                client_id: CLIENT_ID_GOOGLE,\r\n                // scope: \"https://www.googleapis.com/auth/youtube.readonly\",\r\n            });\r\n            const authInstance = this.gapi.auth2.getAuthInstance();\r\n            const isSignedIn = authInstance.isSignedIn.get();\r\n\r\n            if (onlyAlreadySigned && !isSignedIn) {\r\n                return null;\r\n            }\r\n\r\n            if (!isSignedIn) {\r\n                await authInstance.signIn();  \r\n            }  \r\n\r\n            const profile = authInstance.currentUser.get().getBasicProfile();\r\n\r\n            return { \r\n                email:  profile.getEmail(),\r\n                profilePictureURL: profile.getImageUrl(),\r\n                fullName: profile.getName(),\r\n                isAnonymous: false\r\n            } \r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n        }\r\n        return null\r\n    }; \r\n\r\n    async gapiLogout(): Promise<boolean> {\r\n        try {\r\n            const authInstance = this.gapi.auth2.getAuthInstance();\r\n            const isSignedIn = authInstance.isSignedIn.get();\r\n            if (isSignedIn) {\r\n                await authInstance.signOut();\r\n            } \r\n            return true;\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return false;\r\n        }\r\n    };\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n\r\n\r\n\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../redux/store';\r\nimport { ANONYMOUS_ACCOUNT } from \"../../constantes/constantes\";\r\nimport authService from './authService';\r\nimport { AccountType, AuthState } from './authTypes';\r\n\r\nexport const initialAuthState: AuthState = {\r\n    account: null,\r\n    status: 'idle',\r\n};\r\n\r\nexport const login = createAsyncThunk(\r\n    'auth/login',\r\n    async (onlyAlreadySigned: boolean = false): Promise<AccountType | null> => {\r\n        return await authService.gapiLogin(onlyAlreadySigned); \r\n    }\r\n);\r\n\r\nexport const logout = createAsyncThunk(\r\n    'auth/logout',\r\n    async (): Promise<null> => {\r\n        await authService.gapiLogout(); \r\n        return null;\r\n    }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState: initialAuthState,\r\n    reducers: {\r\n        loginAnonymous: (state) => { state.account = ANONYMOUS_ACCOUNT },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(login.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(login.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.account = action.payload;\r\n            })\r\n            .addCase(logout.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(logout.fulfilled, (state) => {\r\n                state.status = 'idle';\r\n                state.account = null;\r\n            });\r\n    },\r\n});\r\n\r\nexport const { loginAnonymous } = authSlice.actions;\r\n\r\nexport const selectAuth = (state: RootState) => state.auth.account;\r\n\r\nexport default authSlice.reducer;\r\n","import { IconButton } from '@mui/material';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport React from 'react';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport {\r\n    logout,\r\n    selectAuth\r\n} from './authSlice';\r\nimport { AccountType } from './authTypes';\r\n\r\nfunction LogoutUserAvatar() {\r\n\r\n    const account: AccountType | null = useAppSelector(selectAuth);\r\n    const dispatch = useAppDispatch();\r\n\r\n    return (\r\n        <Tooltip title={\"Logout from \" + account?.email}>\r\n            <IconButton size=\"large\" color=\"inherit\" onClick={() => dispatch(logout())}>\r\n                <Avatar alt={account?.fullName} src={account?.profilePictureURL} />\r\n            </IconButton>\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport default LogoutUserAvatar;","import { Location } from 'history';\r\nimport { IMAGE_URL_TMDB, URL_PLACEHOLDER_BACKDROP, URL_PLACEHOLDER_POSTER } from '../constantes/constantes';\r\nimport { MovieKeyType } from '../features/movie/movieTypes';\r\n\r\nexport const locationToMovieType = (location: Location<unknown>): MovieKeyType => {\r\n    const name: string = location?.pathname?.substring(1);\r\n    if (name === \"upcoming\" || name === \"nowplaying\" || name === \"toprated\") {\r\n        return name;\r\n    } else {\r\n        return \"search\";\r\n    }\r\n}\r\n\r\nexport const getBackdropFullURL = (endUrl?: string): string => {\r\n    if (endUrl) {\r\n        return IMAGE_URL_TMDB + endUrl;\r\n    } else {\r\n        return URL_PLACEHOLDER_BACKDROP;\r\n    }\r\n}\r\n\r\nexport const getPosterFullURL = (endUrl?: string): string => {\r\n    if (endUrl) {\r\n        return IMAGE_URL_TMDB + endUrl;\r\n    } else {\r\n        return URL_PLACEHOLDER_POSTER;\r\n    }\r\n}\r\n","import { Box, Grid, Rating, CardMedia } from '@mui/material';\r\nimport Button from '@mui/material/Button';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport { GenreType, MovieType } from '../../features/movie/movieTypes';\r\nimport { getPosterFullURL } from '../../functions/helperFunctions';\r\n\r\ntype MovieDialogueProps = {\r\n    movie: MovieType,\r\n    genre: GenreType,\r\n    open: boolean,\r\n    onClose: () => void,\r\n}\r\n\r\nfunction MovieDialogue({ movie, genre, open, onClose }: MovieDialogueProps) {\r\n    const { id, title, overview, vote_average, poster_path, release_date, genre_ids }: MovieType = movie;\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            onClose={onClose}\r\n            aria-labelledby=\"dialog-movie\"\r\n            aria-describedby=\"dialog-movie-description\"\r\n            fullWidth\r\n            maxWidth=\"md\"\r\n        >\r\n            <Grid container  >\r\n                {<Grid item xs={12} sm={4}>\r\n                    <CardMedia\r\n                        height=\"100%\"\r\n                        component=\"img\"\r\n                        image={getPosterFullURL(poster_path)}\r\n                        alt=\"Poster\"\r\n                    />\r\n                </Grid>}\r\n                <Grid item xs={12} sm={8} sx={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                        <DialogTitle id=\"dialog-movie\">\r\n                            {title}\r\n                            <Box>\r\n                                <Typography variant=\"subtitle1\"   >\r\n                                    {release_date}\r\n                                    <Rating sx={{ float: \"right\" }} size=\"small\" name=\"read-only\" value={vote_average / 2} readOnly />\r\n                                </Typography>\r\n                            </Box>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText id=\"dialog-movie-description\">\r\n                                {overview}\r\n                            </DialogContentText>\r\n                            <DialogContentText sx={{ mt: 2 }} id=\"dialog-movie-description\">\r\n                                <Typography key={id} variant=\"button\" color=\"primary\"  >\r\n                                    {genre_ids.slice(0, 3).map((id: number) => genre[id]).join(\" / \")}\r\n                                </Typography>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    </Box>\r\n                    <DialogActions>\r\n                        <Button onClick={onClose}>Close</Button>\r\n                    </DialogActions>\r\n                </Grid>\r\n            </Grid>\r\n        </Dialog >\r\n    );\r\n}\r\n\r\nexport default MovieDialogue;","import { Box, CardActionArea, CardContent, CardHeader, Rating, Theme } from '@mui/material';\r\nimport Card from '@mui/material/Card';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useState } from 'react';\r\nimport TextTruncate from 'react-text-truncate';\r\nimport { GenreType, MovieType } from '../../features/movie/movieTypes';\r\nimport { getBackdropFullURL } from '../../functions/helperFunctions';\r\nimport MovieDialogue from './MovieDialogue';\r\n\r\ntype MovieCardProps = {\r\n    movie: MovieType,\r\n    genre: GenreType,\r\n}\r\n\r\nfunction MovieCard({ movie, genre }: MovieCardProps) {\r\n    const { title, overview, backdrop_path, vote_average, release_date }: MovieType = movie;\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n\r\n    return (\r\n        <>\r\n            <StyledCard >\r\n                <CardActionArea onClick={() => setOpen(true)}>\r\n                    <CardHeader\r\n                        titleTypographyProps={{ variant: \"subtitle2\" }}\r\n                        subheaderTypographyProps={{ variant: \"button\" }}\r\n                        title={title}\r\n                        subheader={<>\r\n                            {release_date}\r\n                            <Rating sx={{ float: \"right\" }} size=\"small\" name=\"read-only\" value={vote_average / 2} readOnly />\r\n                        </>\r\n                        }\r\n                    />\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        sx={{ backgroundColor: (theme: Theme) => theme.palette.common.black }}\r\n                        image={getBackdropFullURL(backdrop_path)}\r\n                        alt=\"random\"\r\n                    />\r\n                    <CardContent>\r\n                        <Box sx={{ color: (theme: Theme) => theme.palette.text.secondary }}>\r\n                            <TextTruncate\r\n                                line={2}\r\n                                element=\"span\"\r\n                                truncateText=\"…\"\r\n                                text={overview}\r\n                            />\r\n                        </ Box>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </StyledCard>\r\n            <MovieDialogue movie={movie} genre={genre} open={open} onClose={() => setOpen(false)} />\r\n        </>\r\n    );\r\n}\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n}));\r\n\r\nexport default MovieCard;","import { TMDB_API_KEY } from \"../../constantes/config\";\r\nimport { API_URL_TMDB } from \"../../constantes/constantes\";\r\nimport { GenreAPIType, MovieType } from \"./movieTypes\";\r\n\r\nclass MovieService {\r\n\r\n    getApiUrlTMDB = (endpoint: string, page: number | string = 0): string => `${API_URL_TMDB + endpoint}?api_key=${TMDB_API_KEY}&page=${page}`;\r\n\r\n    async getGenreIdMovies (): Promise<GenreAPIType[]>   {\r\n        try {\r\n            const rep = await fetch(`${API_URL_TMDB}genre/movie/list?api_key=${TMDB_API_KEY}`);\r\n            const json = await rep.json()\r\n            return json.genres;\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return [];\r\n        }\r\n    };\r\n    \r\n    async getSearchMovies (query: string, page: number = 0): Promise<{ results: MovieType[] } | null>   {\r\n        try {\r\n            const rep = await fetch(`${API_URL_TMDB}search/movie?api_key=${TMDB_API_KEY}&query=${query}&page=${page}`);\r\n            const movies = await rep.json()\r\n            return movies\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    async getNowPlayingMovies (page: number = 0): Promise<{ results: MovieType[] } | null>   {\r\n        try {\r\n            const rep = await fetch(this.getApiUrlTMDB(\"movie/now_playing\", page));\r\n            const movies = await rep.json()\r\n            return movies\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    async getUpcomingMovies (page: number = 0): Promise<{ results: MovieType[] } | null>   {\r\n        try {\r\n            const rep = await fetch(this.getApiUrlTMDB(\"movie/upcoming\", page));\r\n            const movies = await rep.json()\r\n            return movies\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return null;\r\n        }\r\n    };\r\n    \r\n    async  getTopRatedMovies (page: number = 0): Promise<{ results: MovieType[] } | null>   {\r\n        try {\r\n            const rep = await fetch(this.getApiUrlTMDB(\"movie/top_rated\", page));\r\n            const movies = await rep.json()\r\n            return movies\r\n        } catch (error: unknown) {\r\n            console.error(error)\r\n            return null;\r\n        }\r\n    };\r\n} \r\n\r\nexport default new MovieService();","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../redux/store';\r\nimport movieService  from './movieService';\r\nimport { GenreAPIType, GenreType, MovieState, MovieType } from './movieTypes';\r\n\r\nexport const initialMovieState: MovieState = {\r\n    genre: {},\r\n    search: [],\r\n    nowplaying: [],\r\n    upcoming: [],\r\n    toprated: [],\r\n    nowplayingPage: 1,\r\n    upcomingPage: 1,\r\n    topratedPage: 1,\r\n    status: 'idle',\r\n};\r\n\r\nexport const getGenre = createAsyncThunk(\r\n    'movie/genre',\r\n    async (): Promise<GenreType> => {\r\n        const response = await movieService.getGenreIdMovies();\r\n        return response?.reduce((obj: { [key: string]: string }, item: GenreAPIType) => ({ ...obj, [item.id]: item.name }), {}) || {};\r\n    }\r\n);\r\n\r\nexport const getSearch = createAsyncThunk(\r\n    'movie/search',\r\n    async (query: string = \"\"): Promise<MovieType[]> => {\r\n        const response = await movieService.getSearchMovies(query, 1);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\n\r\nexport const getTopRated = createAsyncThunk(\r\n    'movie/toprated',\r\n    async (_, { getState }): Promise<MovieType[]> => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await movieService.getTopRatedMovies(movie?.topratedPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\nexport const getNowPlaying = createAsyncThunk(\r\n    'movie/nowplaying',\r\n    async (_, { getState }): Promise<MovieType[]> => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await movieService.getNowPlayingMovies(movie?.nowplayingPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\nexport const getUpcoming = createAsyncThunk(\r\n    'movie/upcoming',\r\n    async (_, { getState }): Promise<MovieType[]> => {\r\n        const { movie } = getState() as { movie: MovieState };\r\n        const response = await movieService.getUpcomingMovies(movie?.upcomingPage);\r\n        return response?.results || [];\r\n    }\r\n);\r\n\r\n\r\nexport const movieSlice = createSlice({\r\n    name: 'Movie',\r\n    initialState:initialMovieState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getGenre.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getGenre.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.genre = action.payload;\r\n            })\r\n            .addCase(getSearch.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getSearch.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.search = action.payload;\r\n            })\r\n            .addCase(getNowPlaying.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getNowPlaying.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.nowplaying = [...state.nowplaying, ...action.payload];\r\n                state.nowplayingPage++;\r\n            })\r\n            .addCase(getUpcoming.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getUpcoming.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.upcoming = [...state.upcoming, ...action.payload];\r\n                state.upcomingPage++;\r\n            })\r\n            .addCase(getTopRated.pending, (state) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getTopRated.fulfilled, (state, action) => {\r\n                state.status = 'idle';\r\n                state.toprated = [...state.toprated, ...action.payload];\r\n                state.topratedPage++;\r\n            })\r\n    },\r\n});\r\n\r\nexport const selectMovie = (state: RootState) => state.movie;\r\n\r\nexport default movieSlice.reducer;\r\n","import RefreshIcon from '@mui/icons-material/Refresh';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport { Button } from '@mui/material';\r\nimport Container from '@mui/material/Container';\r\nimport Grid from '@mui/material/Grid';\r\nimport Typography from '@mui/material/Typography';\r\nimport { default as React, useEffect } from 'react';\r\nimport { useLocation, useParams } from 'react-router';\r\nimport { Dispatch } from 'redux';\r\nimport MovieCard from '../../app/components/MovieCard';\r\nimport { locationToMovieType } from '../../functions/helperFunctions';\r\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\r\nimport { getGenre, getNowPlaying, getSearch, selectMovie, getTopRated, getUpcoming } from './movieSlice';\r\nimport { MovieKeyType, MovieState, MovieType } from \"./movieTypes\";\r\n\r\nconst dispatchGetMovie = (dispatch: Dispatch<any>, movieType: string) => {\r\n    if (movieType === \"toprated\") {\r\n        dispatch(getTopRated())\r\n    } else if (movieType === \"nowplaying\") {\r\n        dispatch(getNowPlaying())\r\n    } else if (movieType === \"upcoming\") {\r\n        dispatch(getUpcoming())\r\n    }\r\n}\r\n\r\nfunction MovieList() {\r\n\r\n    const { searchText }: { searchText?: string } = useParams();\r\n    const location = useLocation();\r\n    const movieType: MovieKeyType = locationToMovieType(location);\r\n    const { [movieType]: movies, status, genre }: MovieState = useAppSelector(selectMovie);\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        if (!movies.length) {\r\n            dispatchGetMovie(dispatch, movieType)\r\n        }\r\n    }, [dispatch, movies, movieType])\r\n\r\n    useEffect(() => {\r\n        if (!!searchText) {\r\n            dispatch(getSearch(searchText))\r\n        }\r\n    }, [dispatch, searchText])\r\n\r\n    useEffect(() => {\r\n        if (!Object.keys(genre).length) {\r\n            dispatch(getGenre())\r\n        }\r\n    }, [dispatch, genre])\r\n\r\n    return (\r\n        <Container sx={{ mt: 8, py: 4 }} maxWidth=\"xl\">\r\n            <Grid container spacing={4}>\r\n                {!!searchText && status !== \"loading\" && !movies.length && <Grid item xs={12}   >\r\n                    <Typography component=\"div\" variant=\"button\" color=\"primary\" sx={{ textAlign: \"center\" }} >\r\n                        Nothing found <SentimentVeryDissatisfiedIcon sx={{ verticalAlign: \"middle\" }} />\r\n                    </Typography>\r\n                </Grid>}\r\n                {movies.map((movie: MovieType) => (\r\n                    <Grid item key={movie?.id} xs={12} sm={6} md={4} lg={3}>\r\n                        <MovieCard movie={movie} genre={genre} />\r\n                    </Grid>\r\n                ))}\r\n                {!searchText && status !== \"loading\" && <Grid item xs={12} >\r\n\r\n                    <Button variant=\"outlined\"\r\n                        onClick={() => dispatchGetMovie(dispatch, movieType)}\r\n                    >\r\n                        <RefreshIcon sx={{ mr: 1 }} />\r\n                        More\r\n                    </Button>\r\n                </Grid>}\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default MovieList;","import SearchIcon from '@mui/icons-material/Search';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport React, { EventHandler, KeyboardEvent } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nfunction SearchBar() {\r\n\r\n    const history = useHistory();\r\n\r\n    const searchPressEnter: EventHandler<KeyboardEvent<HTMLInputElement>> = (e) => {\r\n        if (e.key === 'Enter') {\r\n            history.push(\"/search/\" + (e.target as HTMLInputElement).value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Search>\r\n            <SearchIconWrapper>\r\n                <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n                onKeyPress={searchPressEnter}\r\n                placeholder=\"Search ⏎\"\r\n                inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n        </Search>\r\n    );\r\n}\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    marginRight: theme.spacing(2),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n    },\r\n}));\r\n\r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nexport default SearchBar;","import EventNoteIcon from '@mui/icons-material/EventNote';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport TimerIcon from '@mui/icons-material/Timer';\r\nimport { IconButton, LinearProgress } from '@mui/material';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { styled } from '@mui/material/styles';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React, { useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { APP_TITLE, PAGE_TITLES } from '../../constantes/constantes';\r\nimport LogoutUserAvatar from '../../features/auth/LogoutUserAvatar';\r\nimport MovieList from '../../features/movie/MovieList';\r\nimport { selectMovie } from '../../features/movie/movieSlice';\r\nimport { MovieKeyType } from '../../features/movie/movieTypes';\r\nimport { locationToMovieType } from '../../functions/helperFunctions';\r\nimport { useAppSelector } from '../../redux/hooks';\r\nimport SearchBar from '../components/SearchBar';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\nexport default function Home() {\r\n\r\n    const theme = useTheme();\r\n    const matchePhone = !useMediaQuery(theme.breakpoints.up('sm'));\r\n\r\n    const [openDrawer, setOpenDrawer] = useState<boolean>(false)\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const { status } = useAppSelector(selectMovie);\r\n    const PageType: MovieKeyType = locationToMovieType(location);\r\n\r\n    const changeMovieType = (MovieType: string) => {\r\n        setOpenDrawer(false)\r\n        history.push(MovieType)\r\n    }\r\n\r\n    return (\r\n        < >\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton size=\"large\" color=\"inherit\" sx={{ mr: 4 }} onClick={() => setOpenDrawer(true)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    {!matchePhone && <>\r\n                        <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}>\r\n                            {APP_TITLE}\r\n                            <Typography variant=\"button\" color=\"textSecondary\" component=\"span\" sx={{ ml: 2 }}>\r\n                                {PAGE_TITLES[PageType]}\r\n                            </Typography>\r\n                        </Typography>\r\n                    </>}\r\n                    <SearchBar />\r\n                    <LogoutUserAvatar />\r\n                </Toolbar>\r\n                {status === 'loading' && <LinearProgress />}\r\n            </AppBar>\r\n            <main  >\r\n                <MovieList />\r\n            </main>\r\n            <StyledDrawer\r\n                anchor=\"left\"\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n            >\r\n                <List>\r\n                    <ListItem button onClick={() => changeMovieType(\"/toprated\")}>\r\n                        <ListItemIcon>\r\n                            <ExploreIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Top rated\"} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                    <ListItem button onClick={() => changeMovieType(\"/nowplaying\")}>\r\n                        <ListItemIcon>\r\n                            <TimerIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Now Playing\"} />\r\n                    </ListItem>\r\n                    <ListItem button onClick={() => changeMovieType(\"/upcoming\")} >\r\n                        <ListItemIcon>\r\n                            < EventNoteIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Up Comming\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </StyledDrawer >\r\n        </>\r\n    );\r\n}\r\n\r\nconst StyledDrawer = styled(Drawer)(({ theme }) => ({\r\n    width: 300,\r\n    flexShrink: 0,\r\n    '& .MuiDrawer-paper': {\r\n        width: 300,\r\n        boxSizing: 'border-box',\r\n    },\r\n}));","import Button from '@mui/material/Button';\r\nimport { styled } from '@mui/material/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\nimport BathtubIcon from '@mui/icons-material/Bathtub';\r\nimport {\r\n    login,\r\n    loginAnonymous\r\n} from './authSlice';\r\n\r\nconst GoogleButton = styled(Button)(({ theme }) => ({\r\n    textTransform: \"none\",\r\n    backgroundColor: theme.palette.common.white,\r\n    color: theme.palette.grey[600],\r\n    \"&:hover\": {\r\n        backgroundColor: theme.palette.grey[300],\r\n    }\r\n}));\r\n\r\nfunction LoginButton() {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(login(true))\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <GoogleButton\r\n                variant=\"contained\"\r\n                onClick={() => dispatch(login())}\r\n            >\r\n                <img alt=\"Google logo\" src={process.env.PUBLIC_URL + \"/assets/google_logo.svg\"} style={{ marginRight: 10 }} />\r\n                Sign in with Google\r\n            </GoogleButton>\r\n            <Button variant=\"outlined\"\r\n                onClick={() => dispatch(loginAnonymous())}>\r\n                <BathtubIcon sx={{ mr: 1 }} /> Anonymous\r\n            </Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginButton;","import Link from '@mui/material/Link';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport { MY_NAME, PORTFOLIO_URL } from '../../constantes/constantes';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href={PORTFOLIO_URL}>\r\n                {MY_NAME}\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default Copyright;","import SlowMotionVideoIcon from '@mui/icons-material/SlowMotionVideo';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Stack from '@mui/material/Stack';\r\nimport { styled } from '@mui/material/styles';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\nimport { APP_TITLE, LOGIN_TITLE } from '../../constantes/constantes';\r\nimport LoginButton from '../../features/auth/LoginButton';\r\nimport Copyright from '../components/Copyright';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <RootBox>\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <SlowMotionVideoIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container component=\"main\" maxWidth=\"xl\" sx={{ flexGrow: 1 }}>\r\n                <Container maxWidth=\"sm\" sx={{ mt: 8 }}>\r\n                    <Typography\r\n                        component=\"h1\"\r\n                        variant=\"h2\"\r\n                        align=\"center\"\r\n                        color=\"text.primary\"\r\n                        gutterBottom\r\n                    >\r\n                        {APP_TITLE}\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" paragraph>\r\n                        {LOGIN_TITLE}\r\n                    </Typography>\r\n                    <Stack\r\n                        sx={{ pt: 4 }}\r\n                        direction=\"row\"\r\n                        spacing={2}\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <LoginButton />\r\n                    </Stack>\r\n                </Container>\r\n            </Container >\r\n            <Box sx={{ p: 6 }} component=\"footer\">\r\n                <Copyright />\r\n            </Box>\r\n        </RootBox >\r\n    );\r\n}\r\n\r\nconst RootBox = styled(Box)(() => ({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: \"100vh\"\r\n}));","import { CssBaseline } from '@mui/material';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport React from 'react';\r\nimport {\r\n  BrowserRouter as Router, Route, Switch, Redirect\r\n} from \"react-router-dom\";\r\nimport { useAppSelector } from './redux/hooks';\r\nimport Home from './app/pages/Home';\r\nimport Login from './app/pages/Login';\r\nimport { selectAuth } from './features/auth/authSlice';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#FF0000',\r\n    },\r\n    secondary: {\r\n      main: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n\r\n  const account = useAppSelector(selectAuth);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Router basename=\"/react-redux-hook-ts-jest\">\r\n        <Switch>\r\n          <Route path=\"/login\">\r\n            {!!account && <Redirect to='/toprated' />}\r\n            <Login />\r\n          </Route>\r\n          <Route path=\"/search/:searchText\">\r\n            {!account && <Redirect to='/login' />}\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/toprated\">\r\n            {!account && <Redirect to='/login' />}\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/nowplaying\">\r\n            {!account && <Redirect to='/login' />}\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/upcoming\">\r\n            {!account && <Redirect to='/login' />}\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Redirect to='/toprated' />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport authReducer from '../features/auth/authSlice';\r\nimport movieReducer from '../features/movie/movieSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    movie: movieReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}